aal "editormodel" {
    language: python {
        import subprocess
        from fmbt import adapterlog as log
        from eyenfinger import *
        import time
        reRead = lambda: iRead("fMBT editor")
        setPreprocessFilter("-sharpen 5 -filter Mitchell -resize 1600x -level 40%,50%,3.0")
    }

    # preview-show-vars: focus
    # preview-depth: 5

    # variables: comma-separated list of variable names
    variables {
        focus, process, model_fn
    }

    initial_state {
        # focus keeps track on the GUI element where
        # keyboard focus should be. focus is None if
        # fmbt-editor is not running and "undefined"
        # if it can be anywhere.
        focus = None

        process = None

        model_fn = "noname.gt" # model filename
    }

    action "iLaunchEditor" {
        guard()   { return focus == None }
        body()    { focus = "modeleditor" }
        adapter() {
            global devnull
            devnull = file("fmbt-editor.output","w")
            process = subprocess.Popen("fmbt-editor", shell=True,
                                       stdout=devnull.fileno(),
                                       stderr=devnull.fileno())
            time.sleep(0.5)
            reRead()
        }
    }

    action "iQuitEditor('Ctrl+Q')", "iQuitEditor('File menu')" {
        guard()  { return focus != None }
        body()   { focus = None }
        adapter() {
            if args[0] == "Ctrl+Q":
                log("Quitting with Ctrl+Q")
                iType([("Control_L", "Q")])
            elif args[0] == "File menu":
                log("Quitting with File->Exit")
                iClickWord("File")
                time.sleep(0.2)
                reRead()
                iClickWord("Exit")
            else:
                log("args[0] (%s) did not match to any of the known arguments" % (args,))
            time.sleep(0.5)
        }
    }

    action "iNewAAL" {
        guard()   { return focus != None }
        body()    { focus = "modeleditor" }
        adapter() {
            iClickWord("File")
            iType(["Down", "Down", "Return"], delay=0.5)
            time.sleep(0.2)
            reRead()
            iType("modelname")
            time.sleep(0.1)
            reRead()
            iVerifyWord('"modelname"', capture="modelname.gif")
            iVerifyWord("[initial_", match=0.8, capture="initial.gif")
            iClickWord("guard()", mouseevent=MOUSEEVENT_MOVE) # take mouse off the menu
            reRead()
        }
    }

    action "iFocusModelEditor('keyb')" {
        guard() { return focus not in [None, "modeleditor"] }
        body() {
            focus = "modeleditor"
        }
        adapter() {
            if args[0] == "keyb":
                iType(["F1"])
            elif args[0] == "mouse":
                iClickWord("F1")
            reRead()
        }
    }

}
