aal "test1" {

    language: python { import mycounter };

    variables {
        i, dir
    }

    initial_state {
        i = 0
        dir = 0
        mycounter.dec_called = 0
        mycounter.last_thing = 'started'
        mycounter.log("aal initial_state executed")
    }

    action "iInc" {
        guard() {
            return dir == 0 and i < 5
        }
        model() {
        i += 1
        }
        adapter(){}
    }

    action "iDec" {
        guard()   { return dir == 1 and i > 0 }
        model()   { i -= 1 }
        adapter() {
                    mycounter.dec_called=1

                    if mycounter.last_thing == 'change':

                        mycounter.last_thing = 'dec'
                  }
    }

    action "iChangeDirection" {
        guard() {
        x = i
        return i > 2 or x <= 0
        }
        model() {
            if dir == 0: dir = 1
            else:
                dir = 0 }
        adapter() {
if mycounter.last_thing == 'dec':
    mycounter.dec_called += 1
    mycounter.direction_changed(i)
        }
    }

    action "iDefaults" {
    }

    action "iEmptyDefaults" {
    guard(){}
    model(){}
    adapter(){}
    }

    action "iFail" {
    guard(){return 0}
        adapter(){assert(0==1)}
    }

    tag "SmallValue" {
        guard() { return i <= 2 }
    }

    tag "LargeValue" {
        guard() {  return i >= 4 }
    }

    tag "Growing" {guard(){return dir==0}}
}
