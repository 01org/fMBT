aal "brainfuck_memory" {
  language: C++ {
#include <sys/stat.h>
#include <sys/types.h>
#include <helper.hh>
  };

  variables {
    int pos;
    unsigned char memory[32768];
  }

  initial_state {
    pos = 0;
    memset(memory,0,sizeof(memory));
  }

  action "inext" {

    adapter() {
      pos++;
      return find(action_names,"inext");
    }
  }

  action "iprev" {

    adapter() {
      pos--;
      return find(action_names,"iprev");
    }
  }

  action "iinc" {
    adapter() {
      memory[pos]++;
      return find(action_names,"iinc");
    }
  }

  action "idec" {

    adapter() {
      memory[pos]--;
      return find(action_names,"idec");
    }
  }

  action "iprint" {

    adapter() {
      fprintf(stdout,"%c",memory[pos]);
      fflush(stdout);
      return find(action_names,"iprint");
    }
  }

  action "imemz", "imemnz" {

    adapter() {
       if (memory[pos]==0)
       	  return find(action_names,"imemz");
       return find(action_names,"imemnz");
    }
  }

  action "iinput" {

    adapter() {
      memory[pos]=getc(stdin);
      return find(action_names,"iinput");            
    }
  }
}
