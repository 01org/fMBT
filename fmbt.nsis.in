# This installs two files, app.exe and fmbt.ico, creates a start menu shortcut, builds an uninstaller, and
# adds uninstall information to the registry for Add/Remove Programs
 
# To get started, put this script into a folder with the two files (app.exe, fmbt.ico, and license.rtf -
# You'll have to create these yourself) and run makensis on it
 
# If you change the names "app.exe", "fmbt.ico", or "license.rtf" you should do a search and replace - they
# show up in a few places.
# All the other settings can be tweaked by editing the !defines at the top of this script
!define APPNAME "fMBT"
!define COMPANYNAME "Intel"
!define DESCRIPTION "Free Model-Based Testing tool automates both generating and executing tests."
# These three must be integers
!define VERSIONMAJOR 0
!define VERSIONMINOR 16
!define VERSIONBUILD 1
# These will be displayed by the "Click here for support information" link in "Add/Remove Programs"
# It is possible to use "mailto:" links in here to open the email client
!define HELPURL "https://01.org/fmbt" # "Support Information" link
!define UPDATEURL "https://01.org/fmbt/downloads" # "Product Updates" link
!define ABOUTURL "https://01.org/fmbt/about" # "Publisher" link
# This is the size (in kB) of all the files copied into "Program Files"
!define INSTALLSIZE 87233
 
RequestExecutionLevel admin ;Require admin rights on NT6+ (When UAC is turned on)
 
InstallDir "$PROGRAMFILES@PROGRAMFILES_SUFFIX@\${APPNAME}"
 
# rtf or txt file - remember if it is txt, it must be in the DOS text format (\r\n)
LicenseData "license.rtf"
# This will be in the installer/uninstaller's title bar
Name "${COMPANYNAME} - ${APPNAME}"
Icon "fmbt.ico"
outFile "fMBT-installer-@WINTYPE@.exe"

!include LogicLib.nsh
 
# Just three pages - license agreement, install location, and installation
page license
page directory
Page instfiles

Section -Prerequisites
  SetOutPath $INSTDIR\Prerequisites
  MessageBox MB_YESNO "Install Python 2.7.8" /SD IDYES IDNO endPython
    file "python-2.7.8@PYTHONPACKAGEARCH@.msi"
    ExecWait '"msiexec" /i "$INSTDIR\Prerequisites\python-2.7.8@PYTHONPACKAGEARCH@.msi"'
  endPython:

  MessageBox MB_YESNO "Install PySide?" /SD IDYES IDNO endPySide
    File "PySide-1.2.2.win@PYSIDEARCH@-py2.7.exe"
    ExecWait "$INSTDIR\Prerequisites\PySide-1.2.2.win@PYSIDEARCH@-py2.7.exe"
  endPySide:

  MessageBox MB_YESNO "Install Graphviz 2.38" /SD IDYES IDNO endGraphviz
    file "graphviz-2.38.msi"
    ExecWait '"msiexec" /i "$INSTDIR\Prerequisites\graphviz-2.38.msi"'
  endGraphviz:

  MessageBox MB_YESNO "Install GNUPlot 4.66" /SD IDYES IDNO endGNUplot
    file "gp466-win64-setup.exe"
    ExecWait "$INSTDIR\Prerequisites\gp466-@WINTYPE@-setup.exe"
  endGNUplot:

SectionEnd
 
!macro VerifyUserIsAdmin
UserInfo::GetAccountType
pop $0
${If} $0 != "admin" ;Require admin rights on NT4+
        messageBox mb_iconstop "Administrator rights required!"
        setErrorLevel 740 ;ERROR_ELEVATION_REQUIRED
        quit
${EndIf}
!macroend
 
function .onInit
	setShellVarContext all
	!insertmacro VerifyUserIsAdmin
functionEnd
 
section "install"
	# Files for the install directory - to build the installer, these should be in the same directory as the install script (this file)
	setOutPath $INSTDIR
	# Files added here should be removed by the uninstaller (see section "uninstall")

# might work if the user is lucky. If unlucky, corrups path.
#	ReadEnvStr $R0 "PATH"
#	StrCpy $R0 "$R0;"$INSTDIR
#	System::Call 'Kernel32::SetEnvironmentVariableA(t, t) i("PATH", R0).r0'

	file "src/.libs/fmbt-aalc.exe"
	file "src/.libs/fmbt-aalp.exe"
	file "src/.libs/fmbt.exe"

# I don't know any sane method to handle dependencies. So hard-code.

	file "@bindir@/gspawn-@WINTYPE@-helper-console.exe"
	file "@bindir@/gspawn-@WINTYPE@-helper.exe"

	file "@bindir@/iconv.dll"
	file "@bindir@/libboost_regex.dll"
	file "@bindir@/libgcc_s_seh-1.dll"
	file "@bindir@/libglib-2.0-0.dll"
	file "@bindir@/libintl-8.dll"
	file "@bindir@/libstdc++-6.dll"

# parts implemented in python
	file "utils/remote_pyaal"
	file ".libs/remote_pyaal.exe"

	file "utils/fmbt-view"
	file ".libs/fmbt-view.exe"

	file "utils/fmbt-scripter"
	file ".libs/fmbt-scripter.exe"

	file "utils/fmbt-editor"
	file ".libs/fmbt-editor.exe"

	file "utils/fmbt-stats"
	file ".libs/fmbt-stats.exe"

	file "utils/lsts2dot"
	file ".libs/lsts2dot.exe"

	file "utils/fmbt-log"
	file ".libs/fmbt-log.exe"
	file "fmbt.ico"

# python libraries.

	setOutPath "C:\python27\lib\"

	file "utils/aalmodel.py"
	file "utils/eyenfinger.py"
	file "utils/fmbtandroid.py"
	file "utils/fmbtchromiumos.py"
	file "utils/fmbt_config.py"
	file "utils/fmbtgti.py"
	file "utils/fmbtlogger.py"
	file "utils/fmbtparsers.py"
	file "utils/fmbtpng.py"
	file "utils/fmbt.py"
	file "utils/fmbtrdp.py"
	file "utils/fmbttizen-agent.py"
	file "utils/fmbttizen.py"
	file "utils/fmbtuinput.py"
	file "utils/fmbtvnc.py"
	file "utils/fmbtweb.py"
	file "utils/fmbtwindows_agent.py"
	file "utils/fmbtwindows.py"
	file "utils/fmbtx11_conn.py"
	file "utils/fmbtx11.py"
	file "utils/lsts.py"

	file "utils/.libs/eye4graphics.dll"
	file "@bindir@/iconv.dll"
	file "@bindir@/libbz2-1.dll"
	file "@bindir@/libgcc_s_seh-1.dll"
	file "@bindir@/libMagickCore-6.Q16-1.dll"
	file "@bindir@/libpng16-16.dll"
	file "@bindir@/libstdc++-6.dll"
	file "@bindir@/libwinpthread-1.dll"
	file "@bindir@/libxml2-2.dll"
	file "@bindir@/zlib1.dll"


	# Add any other files for the install directory (license files, app data, etc) here
 
	# Uninstaller - See function un.onInit and section "uninstall" for configuration
	writeUninstaller "$INSTDIR\uninstall.exe"
 
	# Start Menu
	createDirectory "$SMPROGRAMS\${COMPANYNAME}"
	createShortCut "$SMPROGRAMS\${COMPANYNAME}\${APPNAME}.lnk" "$INSTDIR\fmbt-editor.exe" "" "$INSTDIR\fmbt.ico"

	# Registry information for add/remove programs
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayName" "${COMPANYNAME} - ${APPNAME} - ${DESCRIPTION}"
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "UninstallString" "$\"$INSTDIR\uninstall.exe$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "QuietUninstallString" "$\"$INSTDIR\uninstall.exe$\" /S"
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "InstallLocation" "$\"$INSTDIR$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayIcon" "$\"$INSTDIR\fmbt.ico$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "Publisher" "$\"${COMPANYNAME}$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "HelpLink" "$\"${HELPURL}$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "URLUpdateInfo" "$\"${UPDATEURL}$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "URLInfoAbout" "$\"${ABOUTURL}$\""
	WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "DisplayVersion" "$\"${VERSIONMAJOR}.${VERSIONMINOR}.${VERSIONBUILD}$\""
	WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "VersionMajor" ${VERSIONMAJOR}
	WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "VersionMinor" ${VERSIONMINOR}
	# There is no option for modifying or repairing the install
	WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "NoModify" 1
	WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "NoRepair" 1
	# Set the INSTALLSIZE constant (!defined at the top of this script) so Add/Remove Programs can accurately report the size
	WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}" "EstimatedSize" ${INSTALLSIZE}
sectionEnd
 
# Uninstaller
 
function un.onInit
	SetShellVarContext all
 
	#Verify the uninstaller - last chance to back out
	MessageBox MB_OKCANCEL "Permanantly remove ${APPNAME}?" IDOK next
		Abort
	next:
	!insertmacro VerifyUserIsAdmin
functionEnd
 
section "uninstall"
 
	# Remove Start Menu launcher
	delete "$SMPROGRAMS\${COMPANYNAME}\${APPNAME}.lnk"
	# Try to remove the Start Menu folder - this will only happen if it is empty
	rmDir "$SMPROGRAMS\${COMPANYNAME}"

#	PATH cleanup
#	${EnvVarUpdate} $0 "PATH" "R" "HKLM" $INSTDIR
 
	# Remove files
	delete $INSTDIR\fmbt-aalc.exe
	delete $INSTDIR\fmbt-aalp.exe
	delete $INSTDIR\fmbt.exe
	delete $INSTDIR\gspawn-win32-helper-console.exe
	delete $INSTDIR\gspawn-win32-helper.exe
	delete $INSTDIR\fmbt.ico
	delete $INSTDIR\aalmodel.py
	delete $INSTDIR\eyenfinger.py
	delete $INSTDIR\fmbtandroid.py
	delete $INSTDIR\fmbt_config.py
	delete $INSTDIR\fmbtgti.py
	delete $INSTDIR\fmbtlogger.py
	delete $INSTDIR\fmbtparsers.py
	delete $INSTDIR\fmbt.py
	delete $INSTDIR\fmbttizen.py
	delete $INSTDIR\fmbtweb.py
	delete $INSTDIR\fmbtx11.py
	delete $INSTDIR\lsts.py
	delete $INSTDIR\fmbt-editor
	delete $INSTDIR\fmbt-editor.exe

	delete $INSTDIR\eye4graphics.dll

	delete $INSTDIR\libMagick++-6.Q16-1.dll
	delete $INSTDIR\libMagickCore-6.Q16-1.dll
	delete $INSTDIR\libMagickWand-6.Q16-1.dll
	delete $INSTDIR\remote_pyaal
	delete $INSTDIR\remote_pyaal.exe

	delete $INSTDIR\fmbt-view
	delete $INSTDIR\fmbt-view.exe
	delete $INSTDIR\fmbt-scripter
	delete $INSTDIR\fmbt-scripter.exe
	delete $INSTDIR\fmbt-log
	delete $INSTDIR\fmbt-log.exe

	# Always delete uninstaller as the last action
	delete $INSTDIR\uninstall.exe
 
	# Try to remove the install directory - this will only happen if it is empty
	rmDir $INSTDIR
 
	# Remove uninstaller information from the registry
	DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\${COMPANYNAME} ${APPNAME}"
sectionEnd
