/*
  Generated by Make DParser Version 1.26.4572c8430039eb8e7d05ab65767485dd85319211
  Available at http://dparser.sf.net
*/

#line 1 ".//xrules.g"

/*
 * fMBT, free Model Based Testing tool
 * Copyright (c) 2011, Intel Corporation.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the GNU Lesser General Public License,
 * version 2.1, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for
 * more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
 *
 */
#include <stdlib.h>
#include <string>
typedef struct _node {
  unsigned int val;
  std::string* str;
} node;
#define D_ParseNode_User node
#include "lts_xrules.hh"
Lts_xrules* xobj;


#line 38 "xrules.g.d_parser.cc"
#include "dparse.h"

D_Reduction d_reduction_0_xrules = {1, 0, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_1_xrules = {2, 1, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_2_xrules = {2, 2, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_3_xrules = {1, 2, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_4_xrules = {2, 3, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_5_xrules = {1, 3, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 34 ".//xrules.g"
int d_final_reduction_code_4_6_xrules(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) {  xobj->add_file((D_PN(_children[0], _offset)->user).val,*(D_PN(_children[2], _offset)->user).str); delete (D_PN(_children[2], _offset)->user).str; (D_PN(_children[2], _offset)->user).str=NULL;   return 0;}

#line 50 "xrules.g.d_parser.cc"
D_Reduction d_reduction_6_xrules = {3, 4, NULL, d_final_reduction_code_4_6_xrules, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_7_xrules = {0, 5, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
#line 36 ".//xrules.g"
int d_final_reduction_code_5_8_xrules(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) {  xobj->add_result_action((D_PN(_children[2], _offset)->user).str);   return 0;}

#line 56 "xrules.g.d_parser.cc"
D_Reduction d_reduction_8_xrules = {3, 5, NULL, d_final_reduction_code_5_8_xrules, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_9_xrules = {2, 6, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
D_Reduction d_reduction_10_xrules = {1, 6, NULL, NULL, 0, 0, 0, 0, -1, 0, NULL};
#line 38 ".//xrules.g"
int d_final_reduction_code_7_11_xrules(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) {  xobj->add_component((D_PN(_children[1], _offset)->user).val,*(D_PN(_children[3], _offset)->user).str); delete (D_PN(_children[3], _offset)->user).str; (D_PN(_children[3], _offset)->user).str=NULL;   return 0;}

#line 63 "xrules.g.d_parser.cc"
D_Reduction d_reduction_11_xrules = {5, 7, NULL, d_final_reduction_code_7_11_xrules, 0, 0, 0, 0, 0, 0, NULL};
#line 40 ".//xrules.g"
int d_final_reduction_code_8_12_xrules(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) {  (D_PN(_ps, _offset)->user).str = new std::string((*(D_PN(_children[0], _offset))).start_loc.s+1,(*(D_PN(_children[0], _offset))).end-(*(D_PN(_children[0], _offset))).start_loc.s-2);   return 0;}

#line 68 "xrules.g.d_parser.cc"
D_Reduction d_reduction_12_xrules = {1, 8, NULL, d_final_reduction_code_8_12_xrules, 0, 0, 0, 0, 0, 0, NULL};
#line 42 ".//xrules.g"
int d_final_reduction_code_9_13_xrules(void *_ps, void **_children, int _n_children, int _offset, D_Parser *_parser) {  (D_PN(_ps, _offset)->user).val = atoi((*(D_PN(_children[0], _offset))).start_loc.s);   return 0;}

#line 73 "xrules.g.d_parser.cc"
D_Reduction d_reduction_13_xrules = {1, 9, NULL, d_final_reduction_code_9_13_xrules, 0, 0, 0, 0, 0, 0, NULL};
D_Reduction d_reduction_14_xrules = {1, 10, NULL, NULL, 0, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_0_xrules = {11, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_1_xrules = {12, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_2_xrules = {13, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_3_xrules = {14, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_4_xrules = {15, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_5_xrules = {16, 0, 0, 0, 0, 0, NULL};
D_Shift d_shift_6_xrules = {17, 0, 0, 0, 0, 0, NULL};

D_Shift * d_accepts_diff_0_0_xrules[] = {0};
D_Shift ** d_accepts_diff_0_xrules[] = {
d_accepts_diff_0_0_xrules
};

unsigned char d_scanner_0_0_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 
};

unsigned char d_accepts_diff_0_0_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};

unsigned char d_scanner_0_0_1_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};

D_Shift * d_shift_0_1_xrules[] = {&d_shift_6_xrules,NULL};

D_Shift * d_accepts_diff_3_0_xrules[] = {0};
D_Shift ** d_accepts_diff_3_xrules[] = {
d_accepts_diff_3_0_xrules
};

unsigned char d_scanner_3_0_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 
};

D_Shift * d_shift_3_1_xrules[] = {&d_shift_2_xrules,NULL};

unsigned char d_scanner_3_2_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 
};

D_Shift * d_accepts_diff_5_0_xrules[] = {0};
D_Shift ** d_accepts_diff_5_xrules[] = {
d_accepts_diff_5_0_xrules
};

unsigned char d_scanner_5_0_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 
};

D_Shift * d_shift_5_1_xrules[] = {&d_shift_0_xrules,NULL};

D_Shift * d_accepts_diff_8_0_xrules[] = {0};
D_Shift ** d_accepts_diff_8_xrules[] = {
d_accepts_diff_8_0_xrules
};

unsigned char d_scanner_8_0_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};

D_Shift * d_accepts_diff_11_0_xrules[] = {0};
D_Shift ** d_accepts_diff_11_xrules[] = {
d_accepts_diff_11_0_xrules
};

unsigned char d_scanner_11_0_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};

unsigned char d_scanner_11_2_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 
};

D_Shift * d_shift_11_3_xrules[] = {&d_shift_1_xrules,NULL};

D_Shift * d_accepts_diff_13_0_xrules[] = {0};
D_Shift ** d_accepts_diff_13_xrules[] = {
d_accepts_diff_13_0_xrules
};

unsigned char d_scanner_13_0_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};

unsigned char d_scanner_13_1_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
};

unsigned char d_scanner_13_1_1_xrules[SCANNER_BLOCK_SIZE] = {
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 3, 3, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
};

unsigned char d_scanner_13_1_2_xrules[SCANNER_BLOCK_SIZE] = {
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 
};

D_Shift * d_shift_13_3_xrules[] = {&d_shift_5_xrules,NULL};

unsigned char d_scanner_13_4_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
};

unsigned char d_scanner_13_4_1_xrules[SCANNER_BLOCK_SIZE] = {
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 
};

D_Shift * d_accepts_diff_14_0_xrules[] = {0};
D_Shift ** d_accepts_diff_14_xrules[] = {
d_accepts_diff_14_0_xrules
};

unsigned char d_scanner_14_0_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};

D_Shift * d_shift_14_1_xrules[] = {&d_shift_3_xrules,NULL};

D_Shift * d_accepts_diff_22_0_xrules[] = {0};
D_Shift ** d_accepts_diff_22_xrules[] = {
d_accepts_diff_22_0_xrules
};

unsigned char d_scanner_22_0_0_xrules[SCANNER_BLOCK_SIZE] = {
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
};

D_Shift * d_shift_22_1_xrules[] = {&d_shift_4_xrules,NULL};

SB_uint8 d_scanner_0_xrules[2] = {
{NULL, {d_scanner_0_0_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{d_shift_0_1_xrules, {d_scanner_0_0_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}}
};

SB_trans_uint8 d_transition_0_xrules[2] = {
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}}
};

SB_uint8 d_scanner_3_xrules[3] = {
{NULL, {d_scanner_3_0_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{d_shift_3_1_xrules, {d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{d_shift_0_1_xrules, {d_scanner_3_2_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}}
};

SB_trans_uint8 d_transition_3_xrules[3] = {
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}}
};

SB_uint8 d_scanner_5_xrules[2] = {
{NULL, {d_scanner_5_0_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{d_shift_5_1_xrules, {d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}}
};

SB_trans_uint8 d_transition_5_xrules[2] = {
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}}
};

SB_uint8 d_scanner_8_xrules[2] = {
{NULL, {d_scanner_8_0_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{d_shift_3_1_xrules, {d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}}
};

SB_trans_uint8 d_transition_8_xrules[2] = {
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}}
};

SB_uint8 d_scanner_11_xrules[4] = {
{NULL, {d_scanner_11_0_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{d_shift_3_1_xrules, {d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{NULL, {d_scanner_11_2_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{d_shift_11_3_xrules, {d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}}
};

SB_trans_uint8 d_transition_11_xrules[4] = {
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}}
};

SB_uint8 d_scanner_13_xrules[6] = {
{NULL, {d_scanner_13_0_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{NULL, {d_scanner_13_1_0_xrules, d_scanner_13_1_1_xrules
 , d_scanner_13_1_2_xrules, d_scanner_13_1_2_xrules}},
{NULL, {d_scanner_13_1_0_xrules, d_scanner_13_1_1_xrules
 , d_scanner_13_1_2_xrules, d_scanner_13_1_2_xrules}},
{d_shift_13_3_xrules, {d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{NULL, {d_scanner_13_4_0_xrules, d_scanner_13_4_1_xrules
 , d_scanner_13_4_1_xrules, d_scanner_13_4_1_xrules}},
{NULL, {d_scanner_13_1_0_xrules, d_scanner_13_1_1_xrules
 , d_scanner_13_1_2_xrules, d_scanner_13_1_2_xrules}}
};

SB_trans_uint8 d_transition_13_xrules[6] = {
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}}
};

SB_uint8 d_scanner_14_xrules[2] = {
{NULL, {d_scanner_14_0_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{d_shift_14_1_xrules, {d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}}
};

SB_trans_uint8 d_transition_14_xrules[2] = {
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}}
};

SB_uint8 d_scanner_22_xrules[2] = {
{NULL, {d_scanner_22_0_0_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}},
{d_shift_22_1_xrules, {d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules
 , d_scanner_0_0_1_xrules, d_scanner_0_0_1_xrules}}
};

SB_trans_uint8 d_transition_22_xrules[2] = {
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}},
{{d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules
 , d_accepts_diff_0_0_0_xrules, d_accepts_diff_0_0_0_xrules}}
};

unsigned char d_goto_valid_0_xrules[] = {
0x1a,0x6,0x2};
D_Reduction * d_reductions_1_xrules[] = {&d_reduction_14_xrules};
unsigned char d_goto_valid_3_xrules[] = {
0xf4,0x26,0x2};
D_Reduction * d_reductions_3_xrules[] = {&d_reduction_7_xrules};
D_RightEpsilonHint d_right_epsilon_hints_3_xrules[] = {{0, 10, &d_reduction_3_xrules}};
D_Reduction * d_reductions_4_xrules[] = {&d_reduction_5_xrules};
unsigned char d_goto_valid_5_xrules[] = {
0x0,0x8,0x0};
D_Reduction * d_reductions_6_xrules[] = {&d_reduction_13_xrules};
unsigned char d_goto_valid_7_xrules[] = {
0x0,0x6,0x2};
unsigned char d_goto_valid_8_xrules[] = {
0xe0,0x20,0x0};
D_Reduction * d_reductions_8_xrules[] = {&d_reduction_1_xrules,&d_reduction_7_xrules};
D_RightEpsilonHint d_right_epsilon_hints_8_xrules[] = {{0, 15, &d_reduction_2_xrules}};
D_Reduction * d_reductions_9_xrules[] = {&d_reduction_4_xrules};
D_Reduction * d_reductions_10_xrules[] = {&d_reduction_3_xrules};
unsigned char d_goto_valid_11_xrules[] = {
0x80,0x30,0x0};
D_Reduction * d_reductions_12_xrules[] = {&d_reduction_10_xrules};
unsigned char d_goto_valid_13_xrules[] = {
0x0,0x1,0x1};
unsigned char d_goto_valid_14_xrules[] = {
0x0,0x40,0x0};
D_Reduction * d_reductions_15_xrules[] = {&d_reduction_2_xrules};
unsigned char d_goto_valid_16_xrules[] = {
0x0,0x1,0x1};
D_Reduction * d_reductions_17_xrules[] = {&d_reduction_9_xrules};
D_Reduction * d_reductions_18_xrules[] = {&d_reduction_12_xrules};
D_Reduction * d_reductions_19_xrules[] = {&d_reduction_6_xrules};
unsigned char d_goto_valid_20_xrules[] = {
0x0,0x1,0x1};
D_Reduction * d_reductions_21_xrules[] = {&d_reduction_8_xrules};
unsigned char d_goto_valid_22_xrules[] = {
0x0,0x80,0x0};
D_Reduction * d_reductions_23_xrules[] = {&d_reduction_11_xrules};
unsigned short d_gotos_xrules[42] = {
3,14,4,5,21,24,0,0,6,7,9,0,10,11,12,13,
2,6,7,15,7,8,16,12,13,2,18,2,20,22,8,17,
8,23,0,0,19,19,0,0,0,19};

D_ErrorRecoveryHint d_error_recovery_hints_3_xrules[] = {{0, 7, ")"}};
D_ErrorRecoveryHint d_error_recovery_hints_7_xrules[] = {{1, 7, ")"}};
D_ErrorRecoveryHint d_error_recovery_hints_14_xrules[] = {{2, 7, ")"}};
D_ErrorRecoveryHint d_error_recovery_hints_20_xrules[] = {{3, 7, ")"}};
D_ErrorRecoveryHint d_error_recovery_hints_22_xrules[] = {{4, 7, ")"}};
D_ErrorRecoveryHint d_error_recovery_hints_23_xrules[] = {{5, 7, ")"}};

D_State d_states_xrules[] = {
{d_goto_valid_0_xrules, 1, {0, NULL}, {0, NULL}, {0, NULL}, 1, NULL, (void*)d_scanner_0_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_0_xrules, d_accepts_diff_0_xrules, -1},
{NULL, -2147483647, {1, d_reductions_1_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{NULL, -2147483647, {0, NULL}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 1, D_SCAN_ALL, NULL, NULL, -1},
{d_goto_valid_3_xrules, -8, {1, d_reductions_3_xrules}, {1, d_right_epsilon_hints_3_xrules}, {1, d_error_recovery_hints_3_xrules}, 1, NULL, (void*)d_scanner_3_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_3_xrules, d_accepts_diff_3_xrules, -1},
{NULL, -2147483647, {1, d_reductions_4_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{d_goto_valid_5_xrules, 10, {0, NULL}, {0, NULL}, {0, NULL}, 1, NULL, (void*)d_scanner_5_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_5_xrules, d_accepts_diff_5_xrules, -1},
{NULL, -2147483647, {1, d_reductions_6_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{d_goto_valid_7_xrules, -10, {0, NULL}, {0, NULL}, {1, d_error_recovery_hints_7_xrules}, 1, NULL, (void*)d_scanner_0_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_0_xrules, d_accepts_diff_0_xrules, -1},
{d_goto_valid_8_xrules, -17, {2, d_reductions_8_xrules}, {1, d_right_epsilon_hints_8_xrules}, {1, d_error_recovery_hints_3_xrules}, 1, NULL, (void*)d_scanner_8_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_8_xrules, d_accepts_diff_8_xrules, -1},
{NULL, -2147483647, {1, d_reductions_9_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{NULL, -2147483647, {1, d_reductions_10_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{d_goto_valid_11_xrules, -19, {0, NULL}, {0, NULL}, {1, d_error_recovery_hints_3_xrules}, 1, NULL, (void*)d_scanner_11_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_11_xrules, d_accepts_diff_11_xrules, -1},
{NULL, -2147483647, {1, d_reductions_12_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{d_goto_valid_13_xrules, -20, {0, NULL}, {0, NULL}, {0, NULL}, 1, NULL, (void*)d_scanner_13_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_13_xrules, d_accepts_diff_13_xrules, -1},
{d_goto_valid_14_xrules, 10, {0, NULL}, {0, NULL}, {1, d_error_recovery_hints_14_xrules}, 1, NULL, (void*)d_scanner_14_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_14_xrules, d_accepts_diff_14_xrules, -1},
{NULL, -2147483647, {1, d_reductions_15_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{d_goto_valid_16_xrules, -21, {0, NULL}, {0, NULL}, {0, NULL}, 1, NULL, (void*)d_scanner_13_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_13_xrules, d_accepts_diff_13_xrules, -1},
{NULL, -2147483647, {1, d_reductions_17_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{NULL, -2147483647, {1, d_reductions_18_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{NULL, -2147483647, {1, d_reductions_19_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{d_goto_valid_20_xrules, -25, {0, NULL}, {0, NULL}, {1, d_error_recovery_hints_20_xrules}, 1, NULL, (void*)d_scanner_13_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_13_xrules, d_accepts_diff_13_xrules, -1},
{NULL, -2147483647, {1, d_reductions_21_xrules}, {0, NULL}, {0, NULL}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1},
{d_goto_valid_22_xrules, 10, {0, NULL}, {0, NULL}, {1, d_error_recovery_hints_22_xrules}, 1, NULL, (void*)d_scanner_22_xrules, sizeof(unsigned char) , 0, D_SCAN_ALL, (void*)d_transition_22_xrules, d_accepts_diff_22_xrules, -1},
{NULL, -2147483647, {1, d_reductions_23_xrules}, {0, NULL}, {1, d_error_recovery_hints_23_xrules}, 0, NULL, NULL, sizeof(unsigned char) , 0, D_SCAN_ALL, NULL, NULL, -1}
};

D_Symbol d_symbols_xrules[] = {
{D_SYMBOL_EBNF, "0 Start", 7, -1},
{D_SYMBOL_NTERM, "xrules_file", 11, -1},
{D_SYMBOL_INTERNAL, "xrules_file__3", 14, -1},
{D_SYMBOL_INTERNAL, "xrules_file__2", 14, -1},
{D_SYMBOL_NTERM, "filename", 8, -1},
{D_SYMBOL_NTERM, "rule", 4, -1},
{D_SYMBOL_INTERNAL, "rule__6", 7, -1},
{D_SYMBOL_NTERM, "component", 9, -1},
{D_SYMBOL_NTERM, "string", 6, -1},
{D_SYMBOL_NTERM, "int", 3, -1},
{D_SYMBOL_NTERM, "istr", 4, -1},
{D_SYMBOL_STRING, "=", 1},
{D_SYMBOL_STRING, "->", 2},
{D_SYMBOL_STRING, "(", 1},
{D_SYMBOL_STRING, ",", 1},
{D_SYMBOL_STRING, ")", 1},
{D_SYMBOL_REGEX, "\\\"([^\\\"\\\\\\\\]|\\\\\\\\[^])*\\\"", 38},
{D_SYMBOL_REGEX, "[0-9]+", 6},
};

D_ParserTables parser_tables_xrules = {
24, d_states_xrules, d_gotos_xrules, 0, 18, d_symbols_xrules, NULL, 0, NULL, 0};
