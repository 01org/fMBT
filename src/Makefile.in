# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
@ANDROID_FALSE@bin_PROGRAMS = fmbt$(EXEEXT) \
@ANDROID_FALSE@	remote_adapter_loader$(EXEEXT)
@ANDROID_TRUE@bin_PROGRAMS = fmbt_droid$(EXEEXT)
subdir = src
DIST_COMMON = $(am__dist_bin_SCRIPTS_DIST) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_fmbt_OBJECTS = fmbt-fmbt.$(OBJEXT) fmbt-lts.$(OBJEXT) \
	fmbt-test_engine.$(OBJEXT) fmbt-heuristic_random.$(OBJEXT) \
	fmbt-log.$(OBJEXT) fmbt-helper.$(OBJEXT) \
	fmbt-lts.g.d_parser.$(OBJEXT) fmbt-adapter_model.$(OBJEXT) \
	fmbt-adapter_mapper.$(OBJEXT) fmbt-xrules.g.d_parser.$(OBJEXT) \
	fmbt-lts_xrules.$(OBJEXT) fmbt-coverage_market.$(OBJEXT) \
	fmbt-coverage_mapper.$(OBJEXT) \
	fmbt-requirement.g.d_parser.$(OBJEXT) \
	fmbt-heuristic_greedy.$(OBJEXT) fmbt-coverage_tree.$(OBJEXT) \
	fmbt-adapter_dummy.$(OBJEXT) fmbt-model.$(OBJEXT) \
	fmbt-heuristic.$(OBJEXT) fmbt-coverage.$(OBJEXT) \
	fmbt-adapter.$(OBJEXT) fmbt-conf.g.d_parser.$(OBJEXT) \
	fmbt-conf.$(OBJEXT) fmbt-mrules.g.d_parser.$(OBJEXT) \
	fmbt-policy.$(OBJEXT) fmbt-adapter_remote.$(OBJEXT)
fmbt_OBJECTS = $(am_fmbt_OBJECTS)
fmbt_DEPENDENCIES = d/libdparse.a
fmbt_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(fmbt_LDFLAGS) \
	$(LDFLAGS) -o $@
am_fmbt_droid_OBJECTS = fmbt_droid-fmbt.$(OBJEXT) \
	fmbt_droid-lts.$(OBJEXT) fmbt_droid-test_engine.$(OBJEXT) \
	fmbt_droid-heuristic_random.$(OBJEXT) fmbt_droid-log.$(OBJEXT) \
	fmbt_droid-helper.$(OBJEXT) \
	fmbt_droid-lts.g.d_parser.$(OBJEXT) \
	fmbt_droid-adapter_model.$(OBJEXT) \
	fmbt_droid-adapter_mapper.$(OBJEXT) \
	fmbt_droid-xrules.g.d_parser.$(OBJEXT) \
	fmbt_droid-lts_xrules.$(OBJEXT) \
	fmbt_droid-coverage_market.$(OBJEXT) \
	fmbt_droid-coverage_mapper.$(OBJEXT) \
	fmbt_droid-requirement.g.d_parser.$(OBJEXT) \
	fmbt_droid-heuristic_greedy.$(OBJEXT) \
	fmbt_droid-coverage_tree.$(OBJEXT) \
	fmbt_droid-adapter_dummy.$(OBJEXT) fmbt_droid-model.$(OBJEXT) \
	fmbt_droid-heuristic.$(OBJEXT) fmbt_droid-coverage.$(OBJEXT) \
	fmbt_droid-adapter.$(OBJEXT) \
	fmbt_droid-conf.g.d_parser.$(OBJEXT) fmbt_droid-conf.$(OBJEXT) \
	fmbt_droid-mrules.g.d_parser.$(OBJEXT) \
	fmbt_droid-policy.$(OBJEXT)
fmbt_droid_OBJECTS = $(am_fmbt_droid_OBJECTS)
fmbt_droid_DEPENDENCIES = d/libdparse.a
fmbt_droid_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(fmbt_droid_LDFLAGS) $(LDFLAGS) -o $@
am_remote_adapter_loader_OBJECTS =  \
	remote_adapter_loader-remote_adapter_loader.$(OBJEXT) \
	remote_adapter_loader-adapter.$(OBJEXT) \
	remote_adapter_loader-log.$(OBJEXT)
remote_adapter_loader_OBJECTS = $(am_remote_adapter_loader_OBJECTS)
remote_adapter_loader_LDADD = $(LDADD)
remote_adapter_loader_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(remote_adapter_loader_LDFLAGS) $(LDFLAGS) -o $@
am__dist_bin_SCRIPTS_DIST = remote_python
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
SCRIPTS = $(dist_bin_SCRIPTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(fmbt_SOURCES) $(fmbt_droid_SOURCES) \
	$(remote_adapter_loader_SOURCES)
DIST_SOURCES = $(fmbt_SOURCES) $(fmbt_droid_SOURCES) \
	$(remote_adapter_loader_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
GLIB_CFLAGS = @GLIB_CFLAGS@
GLIB_LIBS = @GLIB_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBEDIT_CFLAGS = @LIBEDIT_CFLAGS@
LIBEDIT_LIBS = @LIBEDIT_LIBS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
@HAVE_PYTHON_TRUE@dist_bin_SCRIPTS = remote_python
fmbt_SOURCES = fmbt.cc lts.cc test_engine.cc heuristic_random.cc log.cc helper.cc lts.g.d_parser.cc adapter_model.cc adapter_mapper.cc xrules.g.d_parser.cc lts_xrules.cc coverage_market.cc coverage_mapper.cc requirement.g.d_parser.cc heuristic_greedy.cc coverage_tree.cc adapter_dummy.cc model.cc heuristic.cc coverage.cc adapter.cc conf.g.d_parser.cc conf.cc mrules.g.d_parser.cc policy.cc adapter_remote.cc
fmbt_droid_SOURCES = fmbt.cc lts.cc test_engine.cc heuristic_random.cc log.cc helper.cc lts.g.d_parser.cc adapter_model.cc adapter_mapper.cc xrules.g.d_parser.cc lts_xrules.cc coverage_market.cc coverage_mapper.cc requirement.g.d_parser.cc heuristic_greedy.cc coverage_tree.cc adapter_dummy.cc model.cc heuristic.cc coverage.cc adapter.cc conf.g.d_parser.cc conf.cc mrules.g.d_parser.cc policy.cc
remote_adapter_loader_SOURCES = remote_adapter_loader.cc adapter.cc log.cc
noinst_HEADERS = adapter_dummy.hh adapter.hh adapter_mapper.hh \
	adapter_model.hh adapter_remote.hh adapter_v4l2.hh \
	adapter_xrules.hh conf.hh coverage.hh coverage_mapper.hh \
	coverage_market.hh coverage_tree.hh helper.hh \
	heuristic_greedy.hh heuristic.hh heuristic_random.hh log.hh \
	log_null.hh lts.hh lts_remote.hh lts_xrules.hh model.hh \
	policy.hh rules.hh test_engine.hh writable.hh conf.g lts.g \
	mrules.g requirement.g xrules.g $(dsources)
fmbt_CPPFLAGS = -Wall -g -O0 -I ./$(VPATH)/d -I `pwd` `pkg-config --cflags libedit glib-2.0 gobject-2.0`
fmbt_droid_CPPFLAGS = -Wall -g -O0 -I d -I `pwd` `pkg-config --cflags libedit` -DDROI
remote_adapter_loader_CPPFLAGS = -Wall -g -I d -DDROI
fmbt_LDFLAGS = -g `pkg-config --libs glib-2.0 gobject-2.0 libedit` -lboost_regex
fmbt_droid_LDFLAGS = -g -ledit
remote_adapter_loader_LDFLAGS = -g
fmbt_LDADD = d/libdparse.a
fmbt_droid_LDADD = d/libdparse.a
dsources = d/baseline d/BUILD_VERSION d/calc d/CHANGES d/COPYRIGHT d/Makefile d/parser_tests d/README d/arg.h d/d.h d/dparse.h d/dparse_tables.h d/dparse_tree.h d/dsymtab.h d/gramgram.h d/gram.h d/lex.h d/lr.h d/mkdparse.h d/parse.h d/read_binary.h d/scan.h d/util.h d/write_tables.h d/arg.c d/dparse_tree.c d/driver_parsetree.c d/gram.c d/grammar.g.c d/lex.c d/lr.c d/make_dparser.c d/mkdparse.c d/my.c d/parse.c d/read_binary.c d/sample_parser.c d/scan.c d/symtab.c d/test_parser.c d/util.c d/version.c d/write_tables.c d/4calc.g d/C.g d/my.g d/sample.g d/faq.html d/index.html d/manual.html d/make_dparser.1 d/make_dparser.cat
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
fmbt$(EXEEXT): $(fmbt_OBJECTS) $(fmbt_DEPENDENCIES) 
	@rm -f fmbt$(EXEEXT)
	$(fmbt_LINK) $(fmbt_OBJECTS) $(fmbt_LDADD) $(LIBS)
fmbt_droid$(EXEEXT): $(fmbt_droid_OBJECTS) $(fmbt_droid_DEPENDENCIES) 
	@rm -f fmbt_droid$(EXEEXT)
	$(fmbt_droid_LINK) $(fmbt_droid_OBJECTS) $(fmbt_droid_LDADD) $(LIBS)
remote_adapter_loader$(EXEEXT): $(remote_adapter_loader_OBJECTS) $(remote_adapter_loader_DEPENDENCIES) 
	@rm -f remote_adapter_loader$(EXEEXT)
	$(remote_adapter_loader_LINK) $(remote_adapter_loader_OBJECTS) $(remote_adapter_loader_LDADD) $(LIBS)
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-adapter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-adapter_dummy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-adapter_mapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-adapter_model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-adapter_remote.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-conf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-conf.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-coverage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-coverage_mapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-coverage_market.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-coverage_tree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-fmbt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-helper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-heuristic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-heuristic_greedy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-heuristic_random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-lts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-lts.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-lts_xrules.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-mrules.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-policy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-requirement.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-test_engine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt-xrules.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-adapter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-adapter_dummy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-adapter_mapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-adapter_model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-conf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-conf.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-coverage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-coverage_mapper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-coverage_market.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-coverage_tree.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-fmbt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-helper.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-heuristic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-heuristic_greedy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-heuristic_random.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-lts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-lts.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-lts_xrules.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-mrules.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-policy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-requirement.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-test_engine.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fmbt_droid-xrules.g.d_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/remote_adapter_loader-adapter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/remote_adapter_loader-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/remote_adapter_loader-remote_adapter_loader.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

fmbt-fmbt.o: fmbt.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-fmbt.o -MD -MP -MF $(DEPDIR)/fmbt-fmbt.Tpo -c -o fmbt-fmbt.o `test -f 'fmbt.cc' || echo '$(srcdir)/'`fmbt.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-fmbt.Tpo $(DEPDIR)/fmbt-fmbt.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fmbt.cc' object='fmbt-fmbt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-fmbt.o `test -f 'fmbt.cc' || echo '$(srcdir)/'`fmbt.cc

fmbt-fmbt.obj: fmbt.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-fmbt.obj -MD -MP -MF $(DEPDIR)/fmbt-fmbt.Tpo -c -o fmbt-fmbt.obj `if test -f 'fmbt.cc'; then $(CYGPATH_W) 'fmbt.cc'; else $(CYGPATH_W) '$(srcdir)/fmbt.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-fmbt.Tpo $(DEPDIR)/fmbt-fmbt.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fmbt.cc' object='fmbt-fmbt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-fmbt.obj `if test -f 'fmbt.cc'; then $(CYGPATH_W) 'fmbt.cc'; else $(CYGPATH_W) '$(srcdir)/fmbt.cc'; fi`

fmbt-lts.o: lts.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-lts.o -MD -MP -MF $(DEPDIR)/fmbt-lts.Tpo -c -o fmbt-lts.o `test -f 'lts.cc' || echo '$(srcdir)/'`lts.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-lts.Tpo $(DEPDIR)/fmbt-lts.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts.cc' object='fmbt-lts.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-lts.o `test -f 'lts.cc' || echo '$(srcdir)/'`lts.cc

fmbt-lts.obj: lts.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-lts.obj -MD -MP -MF $(DEPDIR)/fmbt-lts.Tpo -c -o fmbt-lts.obj `if test -f 'lts.cc'; then $(CYGPATH_W) 'lts.cc'; else $(CYGPATH_W) '$(srcdir)/lts.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-lts.Tpo $(DEPDIR)/fmbt-lts.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts.cc' object='fmbt-lts.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-lts.obj `if test -f 'lts.cc'; then $(CYGPATH_W) 'lts.cc'; else $(CYGPATH_W) '$(srcdir)/lts.cc'; fi`

fmbt-test_engine.o: test_engine.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-test_engine.o -MD -MP -MF $(DEPDIR)/fmbt-test_engine.Tpo -c -o fmbt-test_engine.o `test -f 'test_engine.cc' || echo '$(srcdir)/'`test_engine.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-test_engine.Tpo $(DEPDIR)/fmbt-test_engine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='test_engine.cc' object='fmbt-test_engine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-test_engine.o `test -f 'test_engine.cc' || echo '$(srcdir)/'`test_engine.cc

fmbt-test_engine.obj: test_engine.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-test_engine.obj -MD -MP -MF $(DEPDIR)/fmbt-test_engine.Tpo -c -o fmbt-test_engine.obj `if test -f 'test_engine.cc'; then $(CYGPATH_W) 'test_engine.cc'; else $(CYGPATH_W) '$(srcdir)/test_engine.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-test_engine.Tpo $(DEPDIR)/fmbt-test_engine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='test_engine.cc' object='fmbt-test_engine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-test_engine.obj `if test -f 'test_engine.cc'; then $(CYGPATH_W) 'test_engine.cc'; else $(CYGPATH_W) '$(srcdir)/test_engine.cc'; fi`

fmbt-heuristic_random.o: heuristic_random.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-heuristic_random.o -MD -MP -MF $(DEPDIR)/fmbt-heuristic_random.Tpo -c -o fmbt-heuristic_random.o `test -f 'heuristic_random.cc' || echo '$(srcdir)/'`heuristic_random.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-heuristic_random.Tpo $(DEPDIR)/fmbt-heuristic_random.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic_random.cc' object='fmbt-heuristic_random.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-heuristic_random.o `test -f 'heuristic_random.cc' || echo '$(srcdir)/'`heuristic_random.cc

fmbt-heuristic_random.obj: heuristic_random.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-heuristic_random.obj -MD -MP -MF $(DEPDIR)/fmbt-heuristic_random.Tpo -c -o fmbt-heuristic_random.obj `if test -f 'heuristic_random.cc'; then $(CYGPATH_W) 'heuristic_random.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic_random.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-heuristic_random.Tpo $(DEPDIR)/fmbt-heuristic_random.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic_random.cc' object='fmbt-heuristic_random.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-heuristic_random.obj `if test -f 'heuristic_random.cc'; then $(CYGPATH_W) 'heuristic_random.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic_random.cc'; fi`

fmbt-log.o: log.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-log.o -MD -MP -MF $(DEPDIR)/fmbt-log.Tpo -c -o fmbt-log.o `test -f 'log.cc' || echo '$(srcdir)/'`log.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-log.Tpo $(DEPDIR)/fmbt-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='log.cc' object='fmbt-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-log.o `test -f 'log.cc' || echo '$(srcdir)/'`log.cc

fmbt-log.obj: log.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-log.obj -MD -MP -MF $(DEPDIR)/fmbt-log.Tpo -c -o fmbt-log.obj `if test -f 'log.cc'; then $(CYGPATH_W) 'log.cc'; else $(CYGPATH_W) '$(srcdir)/log.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-log.Tpo $(DEPDIR)/fmbt-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='log.cc' object='fmbt-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-log.obj `if test -f 'log.cc'; then $(CYGPATH_W) 'log.cc'; else $(CYGPATH_W) '$(srcdir)/log.cc'; fi`

fmbt-helper.o: helper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-helper.o -MD -MP -MF $(DEPDIR)/fmbt-helper.Tpo -c -o fmbt-helper.o `test -f 'helper.cc' || echo '$(srcdir)/'`helper.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-helper.Tpo $(DEPDIR)/fmbt-helper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='helper.cc' object='fmbt-helper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-helper.o `test -f 'helper.cc' || echo '$(srcdir)/'`helper.cc

fmbt-helper.obj: helper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-helper.obj -MD -MP -MF $(DEPDIR)/fmbt-helper.Tpo -c -o fmbt-helper.obj `if test -f 'helper.cc'; then $(CYGPATH_W) 'helper.cc'; else $(CYGPATH_W) '$(srcdir)/helper.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-helper.Tpo $(DEPDIR)/fmbt-helper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='helper.cc' object='fmbt-helper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-helper.obj `if test -f 'helper.cc'; then $(CYGPATH_W) 'helper.cc'; else $(CYGPATH_W) '$(srcdir)/helper.cc'; fi`

fmbt-lts.g.d_parser.o: lts.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-lts.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt-lts.g.d_parser.Tpo -c -o fmbt-lts.g.d_parser.o `test -f 'lts.g.d_parser.cc' || echo '$(srcdir)/'`lts.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-lts.g.d_parser.Tpo $(DEPDIR)/fmbt-lts.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts.g.d_parser.cc' object='fmbt-lts.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-lts.g.d_parser.o `test -f 'lts.g.d_parser.cc' || echo '$(srcdir)/'`lts.g.d_parser.cc

fmbt-lts.g.d_parser.obj: lts.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-lts.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt-lts.g.d_parser.Tpo -c -o fmbt-lts.g.d_parser.obj `if test -f 'lts.g.d_parser.cc'; then $(CYGPATH_W) 'lts.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/lts.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-lts.g.d_parser.Tpo $(DEPDIR)/fmbt-lts.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts.g.d_parser.cc' object='fmbt-lts.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-lts.g.d_parser.obj `if test -f 'lts.g.d_parser.cc'; then $(CYGPATH_W) 'lts.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/lts.g.d_parser.cc'; fi`

fmbt-adapter_model.o: adapter_model.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter_model.o -MD -MP -MF $(DEPDIR)/fmbt-adapter_model.Tpo -c -o fmbt-adapter_model.o `test -f 'adapter_model.cc' || echo '$(srcdir)/'`adapter_model.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter_model.Tpo $(DEPDIR)/fmbt-adapter_model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_model.cc' object='fmbt-adapter_model.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter_model.o `test -f 'adapter_model.cc' || echo '$(srcdir)/'`adapter_model.cc

fmbt-adapter_model.obj: adapter_model.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter_model.obj -MD -MP -MF $(DEPDIR)/fmbt-adapter_model.Tpo -c -o fmbt-adapter_model.obj `if test -f 'adapter_model.cc'; then $(CYGPATH_W) 'adapter_model.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_model.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter_model.Tpo $(DEPDIR)/fmbt-adapter_model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_model.cc' object='fmbt-adapter_model.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter_model.obj `if test -f 'adapter_model.cc'; then $(CYGPATH_W) 'adapter_model.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_model.cc'; fi`

fmbt-adapter_mapper.o: adapter_mapper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter_mapper.o -MD -MP -MF $(DEPDIR)/fmbt-adapter_mapper.Tpo -c -o fmbt-adapter_mapper.o `test -f 'adapter_mapper.cc' || echo '$(srcdir)/'`adapter_mapper.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter_mapper.Tpo $(DEPDIR)/fmbt-adapter_mapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_mapper.cc' object='fmbt-adapter_mapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter_mapper.o `test -f 'adapter_mapper.cc' || echo '$(srcdir)/'`adapter_mapper.cc

fmbt-adapter_mapper.obj: adapter_mapper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter_mapper.obj -MD -MP -MF $(DEPDIR)/fmbt-adapter_mapper.Tpo -c -o fmbt-adapter_mapper.obj `if test -f 'adapter_mapper.cc'; then $(CYGPATH_W) 'adapter_mapper.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_mapper.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter_mapper.Tpo $(DEPDIR)/fmbt-adapter_mapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_mapper.cc' object='fmbt-adapter_mapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter_mapper.obj `if test -f 'adapter_mapper.cc'; then $(CYGPATH_W) 'adapter_mapper.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_mapper.cc'; fi`

fmbt-xrules.g.d_parser.o: xrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-xrules.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt-xrules.g.d_parser.Tpo -c -o fmbt-xrules.g.d_parser.o `test -f 'xrules.g.d_parser.cc' || echo '$(srcdir)/'`xrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-xrules.g.d_parser.Tpo $(DEPDIR)/fmbt-xrules.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='xrules.g.d_parser.cc' object='fmbt-xrules.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-xrules.g.d_parser.o `test -f 'xrules.g.d_parser.cc' || echo '$(srcdir)/'`xrules.g.d_parser.cc

fmbt-xrules.g.d_parser.obj: xrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-xrules.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt-xrules.g.d_parser.Tpo -c -o fmbt-xrules.g.d_parser.obj `if test -f 'xrules.g.d_parser.cc'; then $(CYGPATH_W) 'xrules.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/xrules.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-xrules.g.d_parser.Tpo $(DEPDIR)/fmbt-xrules.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='xrules.g.d_parser.cc' object='fmbt-xrules.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-xrules.g.d_parser.obj `if test -f 'xrules.g.d_parser.cc'; then $(CYGPATH_W) 'xrules.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/xrules.g.d_parser.cc'; fi`

fmbt-lts_xrules.o: lts_xrules.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-lts_xrules.o -MD -MP -MF $(DEPDIR)/fmbt-lts_xrules.Tpo -c -o fmbt-lts_xrules.o `test -f 'lts_xrules.cc' || echo '$(srcdir)/'`lts_xrules.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-lts_xrules.Tpo $(DEPDIR)/fmbt-lts_xrules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts_xrules.cc' object='fmbt-lts_xrules.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-lts_xrules.o `test -f 'lts_xrules.cc' || echo '$(srcdir)/'`lts_xrules.cc

fmbt-lts_xrules.obj: lts_xrules.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-lts_xrules.obj -MD -MP -MF $(DEPDIR)/fmbt-lts_xrules.Tpo -c -o fmbt-lts_xrules.obj `if test -f 'lts_xrules.cc'; then $(CYGPATH_W) 'lts_xrules.cc'; else $(CYGPATH_W) '$(srcdir)/lts_xrules.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-lts_xrules.Tpo $(DEPDIR)/fmbt-lts_xrules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts_xrules.cc' object='fmbt-lts_xrules.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-lts_xrules.obj `if test -f 'lts_xrules.cc'; then $(CYGPATH_W) 'lts_xrules.cc'; else $(CYGPATH_W) '$(srcdir)/lts_xrules.cc'; fi`

fmbt-coverage_market.o: coverage_market.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-coverage_market.o -MD -MP -MF $(DEPDIR)/fmbt-coverage_market.Tpo -c -o fmbt-coverage_market.o `test -f 'coverage_market.cc' || echo '$(srcdir)/'`coverage_market.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-coverage_market.Tpo $(DEPDIR)/fmbt-coverage_market.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_market.cc' object='fmbt-coverage_market.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-coverage_market.o `test -f 'coverage_market.cc' || echo '$(srcdir)/'`coverage_market.cc

fmbt-coverage_market.obj: coverage_market.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-coverage_market.obj -MD -MP -MF $(DEPDIR)/fmbt-coverage_market.Tpo -c -o fmbt-coverage_market.obj `if test -f 'coverage_market.cc'; then $(CYGPATH_W) 'coverage_market.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_market.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-coverage_market.Tpo $(DEPDIR)/fmbt-coverage_market.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_market.cc' object='fmbt-coverage_market.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-coverage_market.obj `if test -f 'coverage_market.cc'; then $(CYGPATH_W) 'coverage_market.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_market.cc'; fi`

fmbt-coverage_mapper.o: coverage_mapper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-coverage_mapper.o -MD -MP -MF $(DEPDIR)/fmbt-coverage_mapper.Tpo -c -o fmbt-coverage_mapper.o `test -f 'coverage_mapper.cc' || echo '$(srcdir)/'`coverage_mapper.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-coverage_mapper.Tpo $(DEPDIR)/fmbt-coverage_mapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_mapper.cc' object='fmbt-coverage_mapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-coverage_mapper.o `test -f 'coverage_mapper.cc' || echo '$(srcdir)/'`coverage_mapper.cc

fmbt-coverage_mapper.obj: coverage_mapper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-coverage_mapper.obj -MD -MP -MF $(DEPDIR)/fmbt-coverage_mapper.Tpo -c -o fmbt-coverage_mapper.obj `if test -f 'coverage_mapper.cc'; then $(CYGPATH_W) 'coverage_mapper.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_mapper.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-coverage_mapper.Tpo $(DEPDIR)/fmbt-coverage_mapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_mapper.cc' object='fmbt-coverage_mapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-coverage_mapper.obj `if test -f 'coverage_mapper.cc'; then $(CYGPATH_W) 'coverage_mapper.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_mapper.cc'; fi`

fmbt-requirement.g.d_parser.o: requirement.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-requirement.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt-requirement.g.d_parser.Tpo -c -o fmbt-requirement.g.d_parser.o `test -f 'requirement.g.d_parser.cc' || echo '$(srcdir)/'`requirement.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-requirement.g.d_parser.Tpo $(DEPDIR)/fmbt-requirement.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='requirement.g.d_parser.cc' object='fmbt-requirement.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-requirement.g.d_parser.o `test -f 'requirement.g.d_parser.cc' || echo '$(srcdir)/'`requirement.g.d_parser.cc

fmbt-requirement.g.d_parser.obj: requirement.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-requirement.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt-requirement.g.d_parser.Tpo -c -o fmbt-requirement.g.d_parser.obj `if test -f 'requirement.g.d_parser.cc'; then $(CYGPATH_W) 'requirement.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/requirement.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-requirement.g.d_parser.Tpo $(DEPDIR)/fmbt-requirement.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='requirement.g.d_parser.cc' object='fmbt-requirement.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-requirement.g.d_parser.obj `if test -f 'requirement.g.d_parser.cc'; then $(CYGPATH_W) 'requirement.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/requirement.g.d_parser.cc'; fi`

fmbt-heuristic_greedy.o: heuristic_greedy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-heuristic_greedy.o -MD -MP -MF $(DEPDIR)/fmbt-heuristic_greedy.Tpo -c -o fmbt-heuristic_greedy.o `test -f 'heuristic_greedy.cc' || echo '$(srcdir)/'`heuristic_greedy.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-heuristic_greedy.Tpo $(DEPDIR)/fmbt-heuristic_greedy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic_greedy.cc' object='fmbt-heuristic_greedy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-heuristic_greedy.o `test -f 'heuristic_greedy.cc' || echo '$(srcdir)/'`heuristic_greedy.cc

fmbt-heuristic_greedy.obj: heuristic_greedy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-heuristic_greedy.obj -MD -MP -MF $(DEPDIR)/fmbt-heuristic_greedy.Tpo -c -o fmbt-heuristic_greedy.obj `if test -f 'heuristic_greedy.cc'; then $(CYGPATH_W) 'heuristic_greedy.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic_greedy.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-heuristic_greedy.Tpo $(DEPDIR)/fmbt-heuristic_greedy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic_greedy.cc' object='fmbt-heuristic_greedy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-heuristic_greedy.obj `if test -f 'heuristic_greedy.cc'; then $(CYGPATH_W) 'heuristic_greedy.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic_greedy.cc'; fi`

fmbt-coverage_tree.o: coverage_tree.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-coverage_tree.o -MD -MP -MF $(DEPDIR)/fmbt-coverage_tree.Tpo -c -o fmbt-coverage_tree.o `test -f 'coverage_tree.cc' || echo '$(srcdir)/'`coverage_tree.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-coverage_tree.Tpo $(DEPDIR)/fmbt-coverage_tree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_tree.cc' object='fmbt-coverage_tree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-coverage_tree.o `test -f 'coverage_tree.cc' || echo '$(srcdir)/'`coverage_tree.cc

fmbt-coverage_tree.obj: coverage_tree.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-coverage_tree.obj -MD -MP -MF $(DEPDIR)/fmbt-coverage_tree.Tpo -c -o fmbt-coverage_tree.obj `if test -f 'coverage_tree.cc'; then $(CYGPATH_W) 'coverage_tree.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_tree.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-coverage_tree.Tpo $(DEPDIR)/fmbt-coverage_tree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_tree.cc' object='fmbt-coverage_tree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-coverage_tree.obj `if test -f 'coverage_tree.cc'; then $(CYGPATH_W) 'coverage_tree.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_tree.cc'; fi`

fmbt-adapter_dummy.o: adapter_dummy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter_dummy.o -MD -MP -MF $(DEPDIR)/fmbt-adapter_dummy.Tpo -c -o fmbt-adapter_dummy.o `test -f 'adapter_dummy.cc' || echo '$(srcdir)/'`adapter_dummy.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter_dummy.Tpo $(DEPDIR)/fmbt-adapter_dummy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_dummy.cc' object='fmbt-adapter_dummy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter_dummy.o `test -f 'adapter_dummy.cc' || echo '$(srcdir)/'`adapter_dummy.cc

fmbt-adapter_dummy.obj: adapter_dummy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter_dummy.obj -MD -MP -MF $(DEPDIR)/fmbt-adapter_dummy.Tpo -c -o fmbt-adapter_dummy.obj `if test -f 'adapter_dummy.cc'; then $(CYGPATH_W) 'adapter_dummy.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_dummy.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter_dummy.Tpo $(DEPDIR)/fmbt-adapter_dummy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_dummy.cc' object='fmbt-adapter_dummy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter_dummy.obj `if test -f 'adapter_dummy.cc'; then $(CYGPATH_W) 'adapter_dummy.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_dummy.cc'; fi`

fmbt-model.o: model.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-model.o -MD -MP -MF $(DEPDIR)/fmbt-model.Tpo -c -o fmbt-model.o `test -f 'model.cc' || echo '$(srcdir)/'`model.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-model.Tpo $(DEPDIR)/fmbt-model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model.cc' object='fmbt-model.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-model.o `test -f 'model.cc' || echo '$(srcdir)/'`model.cc

fmbt-model.obj: model.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-model.obj -MD -MP -MF $(DEPDIR)/fmbt-model.Tpo -c -o fmbt-model.obj `if test -f 'model.cc'; then $(CYGPATH_W) 'model.cc'; else $(CYGPATH_W) '$(srcdir)/model.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-model.Tpo $(DEPDIR)/fmbt-model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model.cc' object='fmbt-model.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-model.obj `if test -f 'model.cc'; then $(CYGPATH_W) 'model.cc'; else $(CYGPATH_W) '$(srcdir)/model.cc'; fi`

fmbt-heuristic.o: heuristic.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-heuristic.o -MD -MP -MF $(DEPDIR)/fmbt-heuristic.Tpo -c -o fmbt-heuristic.o `test -f 'heuristic.cc' || echo '$(srcdir)/'`heuristic.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-heuristic.Tpo $(DEPDIR)/fmbt-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic.cc' object='fmbt-heuristic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-heuristic.o `test -f 'heuristic.cc' || echo '$(srcdir)/'`heuristic.cc

fmbt-heuristic.obj: heuristic.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-heuristic.obj -MD -MP -MF $(DEPDIR)/fmbt-heuristic.Tpo -c -o fmbt-heuristic.obj `if test -f 'heuristic.cc'; then $(CYGPATH_W) 'heuristic.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-heuristic.Tpo $(DEPDIR)/fmbt-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic.cc' object='fmbt-heuristic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-heuristic.obj `if test -f 'heuristic.cc'; then $(CYGPATH_W) 'heuristic.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic.cc'; fi`

fmbt-coverage.o: coverage.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-coverage.o -MD -MP -MF $(DEPDIR)/fmbt-coverage.Tpo -c -o fmbt-coverage.o `test -f 'coverage.cc' || echo '$(srcdir)/'`coverage.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-coverage.Tpo $(DEPDIR)/fmbt-coverage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage.cc' object='fmbt-coverage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-coverage.o `test -f 'coverage.cc' || echo '$(srcdir)/'`coverage.cc

fmbt-coverage.obj: coverage.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-coverage.obj -MD -MP -MF $(DEPDIR)/fmbt-coverage.Tpo -c -o fmbt-coverage.obj `if test -f 'coverage.cc'; then $(CYGPATH_W) 'coverage.cc'; else $(CYGPATH_W) '$(srcdir)/coverage.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-coverage.Tpo $(DEPDIR)/fmbt-coverage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage.cc' object='fmbt-coverage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-coverage.obj `if test -f 'coverage.cc'; then $(CYGPATH_W) 'coverage.cc'; else $(CYGPATH_W) '$(srcdir)/coverage.cc'; fi`

fmbt-adapter.o: adapter.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter.o -MD -MP -MF $(DEPDIR)/fmbt-adapter.Tpo -c -o fmbt-adapter.o `test -f 'adapter.cc' || echo '$(srcdir)/'`adapter.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter.Tpo $(DEPDIR)/fmbt-adapter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter.cc' object='fmbt-adapter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter.o `test -f 'adapter.cc' || echo '$(srcdir)/'`adapter.cc

fmbt-adapter.obj: adapter.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter.obj -MD -MP -MF $(DEPDIR)/fmbt-adapter.Tpo -c -o fmbt-adapter.obj `if test -f 'adapter.cc'; then $(CYGPATH_W) 'adapter.cc'; else $(CYGPATH_W) '$(srcdir)/adapter.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter.Tpo $(DEPDIR)/fmbt-adapter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter.cc' object='fmbt-adapter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter.obj `if test -f 'adapter.cc'; then $(CYGPATH_W) 'adapter.cc'; else $(CYGPATH_W) '$(srcdir)/adapter.cc'; fi`

fmbt-conf.g.d_parser.o: conf.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-conf.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt-conf.g.d_parser.Tpo -c -o fmbt-conf.g.d_parser.o `test -f 'conf.g.d_parser.cc' || echo '$(srcdir)/'`conf.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-conf.g.d_parser.Tpo $(DEPDIR)/fmbt-conf.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='conf.g.d_parser.cc' object='fmbt-conf.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-conf.g.d_parser.o `test -f 'conf.g.d_parser.cc' || echo '$(srcdir)/'`conf.g.d_parser.cc

fmbt-conf.g.d_parser.obj: conf.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-conf.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt-conf.g.d_parser.Tpo -c -o fmbt-conf.g.d_parser.obj `if test -f 'conf.g.d_parser.cc'; then $(CYGPATH_W) 'conf.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/conf.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-conf.g.d_parser.Tpo $(DEPDIR)/fmbt-conf.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='conf.g.d_parser.cc' object='fmbt-conf.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-conf.g.d_parser.obj `if test -f 'conf.g.d_parser.cc'; then $(CYGPATH_W) 'conf.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/conf.g.d_parser.cc'; fi`

fmbt-conf.o: conf.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-conf.o -MD -MP -MF $(DEPDIR)/fmbt-conf.Tpo -c -o fmbt-conf.o `test -f 'conf.cc' || echo '$(srcdir)/'`conf.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-conf.Tpo $(DEPDIR)/fmbt-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='conf.cc' object='fmbt-conf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-conf.o `test -f 'conf.cc' || echo '$(srcdir)/'`conf.cc

fmbt-conf.obj: conf.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-conf.obj -MD -MP -MF $(DEPDIR)/fmbt-conf.Tpo -c -o fmbt-conf.obj `if test -f 'conf.cc'; then $(CYGPATH_W) 'conf.cc'; else $(CYGPATH_W) '$(srcdir)/conf.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-conf.Tpo $(DEPDIR)/fmbt-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='conf.cc' object='fmbt-conf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-conf.obj `if test -f 'conf.cc'; then $(CYGPATH_W) 'conf.cc'; else $(CYGPATH_W) '$(srcdir)/conf.cc'; fi`

fmbt-mrules.g.d_parser.o: mrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-mrules.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt-mrules.g.d_parser.Tpo -c -o fmbt-mrules.g.d_parser.o `test -f 'mrules.g.d_parser.cc' || echo '$(srcdir)/'`mrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-mrules.g.d_parser.Tpo $(DEPDIR)/fmbt-mrules.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mrules.g.d_parser.cc' object='fmbt-mrules.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-mrules.g.d_parser.o `test -f 'mrules.g.d_parser.cc' || echo '$(srcdir)/'`mrules.g.d_parser.cc

fmbt-mrules.g.d_parser.obj: mrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-mrules.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt-mrules.g.d_parser.Tpo -c -o fmbt-mrules.g.d_parser.obj `if test -f 'mrules.g.d_parser.cc'; then $(CYGPATH_W) 'mrules.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/mrules.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-mrules.g.d_parser.Tpo $(DEPDIR)/fmbt-mrules.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mrules.g.d_parser.cc' object='fmbt-mrules.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-mrules.g.d_parser.obj `if test -f 'mrules.g.d_parser.cc'; then $(CYGPATH_W) 'mrules.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/mrules.g.d_parser.cc'; fi`

fmbt-policy.o: policy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-policy.o -MD -MP -MF $(DEPDIR)/fmbt-policy.Tpo -c -o fmbt-policy.o `test -f 'policy.cc' || echo '$(srcdir)/'`policy.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-policy.Tpo $(DEPDIR)/fmbt-policy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='policy.cc' object='fmbt-policy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-policy.o `test -f 'policy.cc' || echo '$(srcdir)/'`policy.cc

fmbt-policy.obj: policy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-policy.obj -MD -MP -MF $(DEPDIR)/fmbt-policy.Tpo -c -o fmbt-policy.obj `if test -f 'policy.cc'; then $(CYGPATH_W) 'policy.cc'; else $(CYGPATH_W) '$(srcdir)/policy.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-policy.Tpo $(DEPDIR)/fmbt-policy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='policy.cc' object='fmbt-policy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-policy.obj `if test -f 'policy.cc'; then $(CYGPATH_W) 'policy.cc'; else $(CYGPATH_W) '$(srcdir)/policy.cc'; fi`

fmbt-adapter_remote.o: adapter_remote.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter_remote.o -MD -MP -MF $(DEPDIR)/fmbt-adapter_remote.Tpo -c -o fmbt-adapter_remote.o `test -f 'adapter_remote.cc' || echo '$(srcdir)/'`adapter_remote.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter_remote.Tpo $(DEPDIR)/fmbt-adapter_remote.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_remote.cc' object='fmbt-adapter_remote.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter_remote.o `test -f 'adapter_remote.cc' || echo '$(srcdir)/'`adapter_remote.cc

fmbt-adapter_remote.obj: adapter_remote.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt-adapter_remote.obj -MD -MP -MF $(DEPDIR)/fmbt-adapter_remote.Tpo -c -o fmbt-adapter_remote.obj `if test -f 'adapter_remote.cc'; then $(CYGPATH_W) 'adapter_remote.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_remote.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt-adapter_remote.Tpo $(DEPDIR)/fmbt-adapter_remote.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_remote.cc' object='fmbt-adapter_remote.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt-adapter_remote.obj `if test -f 'adapter_remote.cc'; then $(CYGPATH_W) 'adapter_remote.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_remote.cc'; fi`

fmbt_droid-fmbt.o: fmbt.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-fmbt.o -MD -MP -MF $(DEPDIR)/fmbt_droid-fmbt.Tpo -c -o fmbt_droid-fmbt.o `test -f 'fmbt.cc' || echo '$(srcdir)/'`fmbt.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-fmbt.Tpo $(DEPDIR)/fmbt_droid-fmbt.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fmbt.cc' object='fmbt_droid-fmbt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-fmbt.o `test -f 'fmbt.cc' || echo '$(srcdir)/'`fmbt.cc

fmbt_droid-fmbt.obj: fmbt.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-fmbt.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-fmbt.Tpo -c -o fmbt_droid-fmbt.obj `if test -f 'fmbt.cc'; then $(CYGPATH_W) 'fmbt.cc'; else $(CYGPATH_W) '$(srcdir)/fmbt.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-fmbt.Tpo $(DEPDIR)/fmbt_droid-fmbt.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='fmbt.cc' object='fmbt_droid-fmbt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-fmbt.obj `if test -f 'fmbt.cc'; then $(CYGPATH_W) 'fmbt.cc'; else $(CYGPATH_W) '$(srcdir)/fmbt.cc'; fi`

fmbt_droid-lts.o: lts.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-lts.o -MD -MP -MF $(DEPDIR)/fmbt_droid-lts.Tpo -c -o fmbt_droid-lts.o `test -f 'lts.cc' || echo '$(srcdir)/'`lts.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-lts.Tpo $(DEPDIR)/fmbt_droid-lts.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts.cc' object='fmbt_droid-lts.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-lts.o `test -f 'lts.cc' || echo '$(srcdir)/'`lts.cc

fmbt_droid-lts.obj: lts.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-lts.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-lts.Tpo -c -o fmbt_droid-lts.obj `if test -f 'lts.cc'; then $(CYGPATH_W) 'lts.cc'; else $(CYGPATH_W) '$(srcdir)/lts.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-lts.Tpo $(DEPDIR)/fmbt_droid-lts.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts.cc' object='fmbt_droid-lts.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-lts.obj `if test -f 'lts.cc'; then $(CYGPATH_W) 'lts.cc'; else $(CYGPATH_W) '$(srcdir)/lts.cc'; fi`

fmbt_droid-test_engine.o: test_engine.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-test_engine.o -MD -MP -MF $(DEPDIR)/fmbt_droid-test_engine.Tpo -c -o fmbt_droid-test_engine.o `test -f 'test_engine.cc' || echo '$(srcdir)/'`test_engine.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-test_engine.Tpo $(DEPDIR)/fmbt_droid-test_engine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='test_engine.cc' object='fmbt_droid-test_engine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-test_engine.o `test -f 'test_engine.cc' || echo '$(srcdir)/'`test_engine.cc

fmbt_droid-test_engine.obj: test_engine.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-test_engine.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-test_engine.Tpo -c -o fmbt_droid-test_engine.obj `if test -f 'test_engine.cc'; then $(CYGPATH_W) 'test_engine.cc'; else $(CYGPATH_W) '$(srcdir)/test_engine.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-test_engine.Tpo $(DEPDIR)/fmbt_droid-test_engine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='test_engine.cc' object='fmbt_droid-test_engine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-test_engine.obj `if test -f 'test_engine.cc'; then $(CYGPATH_W) 'test_engine.cc'; else $(CYGPATH_W) '$(srcdir)/test_engine.cc'; fi`

fmbt_droid-heuristic_random.o: heuristic_random.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-heuristic_random.o -MD -MP -MF $(DEPDIR)/fmbt_droid-heuristic_random.Tpo -c -o fmbt_droid-heuristic_random.o `test -f 'heuristic_random.cc' || echo '$(srcdir)/'`heuristic_random.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-heuristic_random.Tpo $(DEPDIR)/fmbt_droid-heuristic_random.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic_random.cc' object='fmbt_droid-heuristic_random.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-heuristic_random.o `test -f 'heuristic_random.cc' || echo '$(srcdir)/'`heuristic_random.cc

fmbt_droid-heuristic_random.obj: heuristic_random.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-heuristic_random.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-heuristic_random.Tpo -c -o fmbt_droid-heuristic_random.obj `if test -f 'heuristic_random.cc'; then $(CYGPATH_W) 'heuristic_random.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic_random.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-heuristic_random.Tpo $(DEPDIR)/fmbt_droid-heuristic_random.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic_random.cc' object='fmbt_droid-heuristic_random.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-heuristic_random.obj `if test -f 'heuristic_random.cc'; then $(CYGPATH_W) 'heuristic_random.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic_random.cc'; fi`

fmbt_droid-log.o: log.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-log.o -MD -MP -MF $(DEPDIR)/fmbt_droid-log.Tpo -c -o fmbt_droid-log.o `test -f 'log.cc' || echo '$(srcdir)/'`log.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-log.Tpo $(DEPDIR)/fmbt_droid-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='log.cc' object='fmbt_droid-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-log.o `test -f 'log.cc' || echo '$(srcdir)/'`log.cc

fmbt_droid-log.obj: log.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-log.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-log.Tpo -c -o fmbt_droid-log.obj `if test -f 'log.cc'; then $(CYGPATH_W) 'log.cc'; else $(CYGPATH_W) '$(srcdir)/log.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-log.Tpo $(DEPDIR)/fmbt_droid-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='log.cc' object='fmbt_droid-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-log.obj `if test -f 'log.cc'; then $(CYGPATH_W) 'log.cc'; else $(CYGPATH_W) '$(srcdir)/log.cc'; fi`

fmbt_droid-helper.o: helper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-helper.o -MD -MP -MF $(DEPDIR)/fmbt_droid-helper.Tpo -c -o fmbt_droid-helper.o `test -f 'helper.cc' || echo '$(srcdir)/'`helper.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-helper.Tpo $(DEPDIR)/fmbt_droid-helper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='helper.cc' object='fmbt_droid-helper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-helper.o `test -f 'helper.cc' || echo '$(srcdir)/'`helper.cc

fmbt_droid-helper.obj: helper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-helper.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-helper.Tpo -c -o fmbt_droid-helper.obj `if test -f 'helper.cc'; then $(CYGPATH_W) 'helper.cc'; else $(CYGPATH_W) '$(srcdir)/helper.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-helper.Tpo $(DEPDIR)/fmbt_droid-helper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='helper.cc' object='fmbt_droid-helper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-helper.obj `if test -f 'helper.cc'; then $(CYGPATH_W) 'helper.cc'; else $(CYGPATH_W) '$(srcdir)/helper.cc'; fi`

fmbt_droid-lts.g.d_parser.o: lts.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-lts.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt_droid-lts.g.d_parser.Tpo -c -o fmbt_droid-lts.g.d_parser.o `test -f 'lts.g.d_parser.cc' || echo '$(srcdir)/'`lts.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-lts.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-lts.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts.g.d_parser.cc' object='fmbt_droid-lts.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-lts.g.d_parser.o `test -f 'lts.g.d_parser.cc' || echo '$(srcdir)/'`lts.g.d_parser.cc

fmbt_droid-lts.g.d_parser.obj: lts.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-lts.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-lts.g.d_parser.Tpo -c -o fmbt_droid-lts.g.d_parser.obj `if test -f 'lts.g.d_parser.cc'; then $(CYGPATH_W) 'lts.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/lts.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-lts.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-lts.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts.g.d_parser.cc' object='fmbt_droid-lts.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-lts.g.d_parser.obj `if test -f 'lts.g.d_parser.cc'; then $(CYGPATH_W) 'lts.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/lts.g.d_parser.cc'; fi`

fmbt_droid-adapter_model.o: adapter_model.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-adapter_model.o -MD -MP -MF $(DEPDIR)/fmbt_droid-adapter_model.Tpo -c -o fmbt_droid-adapter_model.o `test -f 'adapter_model.cc' || echo '$(srcdir)/'`adapter_model.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-adapter_model.Tpo $(DEPDIR)/fmbt_droid-adapter_model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_model.cc' object='fmbt_droid-adapter_model.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-adapter_model.o `test -f 'adapter_model.cc' || echo '$(srcdir)/'`adapter_model.cc

fmbt_droid-adapter_model.obj: adapter_model.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-adapter_model.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-adapter_model.Tpo -c -o fmbt_droid-adapter_model.obj `if test -f 'adapter_model.cc'; then $(CYGPATH_W) 'adapter_model.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_model.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-adapter_model.Tpo $(DEPDIR)/fmbt_droid-adapter_model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_model.cc' object='fmbt_droid-adapter_model.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-adapter_model.obj `if test -f 'adapter_model.cc'; then $(CYGPATH_W) 'adapter_model.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_model.cc'; fi`

fmbt_droid-adapter_mapper.o: adapter_mapper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-adapter_mapper.o -MD -MP -MF $(DEPDIR)/fmbt_droid-adapter_mapper.Tpo -c -o fmbt_droid-adapter_mapper.o `test -f 'adapter_mapper.cc' || echo '$(srcdir)/'`adapter_mapper.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-adapter_mapper.Tpo $(DEPDIR)/fmbt_droid-adapter_mapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_mapper.cc' object='fmbt_droid-adapter_mapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-adapter_mapper.o `test -f 'adapter_mapper.cc' || echo '$(srcdir)/'`adapter_mapper.cc

fmbt_droid-adapter_mapper.obj: adapter_mapper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-adapter_mapper.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-adapter_mapper.Tpo -c -o fmbt_droid-adapter_mapper.obj `if test -f 'adapter_mapper.cc'; then $(CYGPATH_W) 'adapter_mapper.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_mapper.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-adapter_mapper.Tpo $(DEPDIR)/fmbt_droid-adapter_mapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_mapper.cc' object='fmbt_droid-adapter_mapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-adapter_mapper.obj `if test -f 'adapter_mapper.cc'; then $(CYGPATH_W) 'adapter_mapper.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_mapper.cc'; fi`

fmbt_droid-xrules.g.d_parser.o: xrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-xrules.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt_droid-xrules.g.d_parser.Tpo -c -o fmbt_droid-xrules.g.d_parser.o `test -f 'xrules.g.d_parser.cc' || echo '$(srcdir)/'`xrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-xrules.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-xrules.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='xrules.g.d_parser.cc' object='fmbt_droid-xrules.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-xrules.g.d_parser.o `test -f 'xrules.g.d_parser.cc' || echo '$(srcdir)/'`xrules.g.d_parser.cc

fmbt_droid-xrules.g.d_parser.obj: xrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-xrules.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-xrules.g.d_parser.Tpo -c -o fmbt_droid-xrules.g.d_parser.obj `if test -f 'xrules.g.d_parser.cc'; then $(CYGPATH_W) 'xrules.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/xrules.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-xrules.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-xrules.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='xrules.g.d_parser.cc' object='fmbt_droid-xrules.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-xrules.g.d_parser.obj `if test -f 'xrules.g.d_parser.cc'; then $(CYGPATH_W) 'xrules.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/xrules.g.d_parser.cc'; fi`

fmbt_droid-lts_xrules.o: lts_xrules.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-lts_xrules.o -MD -MP -MF $(DEPDIR)/fmbt_droid-lts_xrules.Tpo -c -o fmbt_droid-lts_xrules.o `test -f 'lts_xrules.cc' || echo '$(srcdir)/'`lts_xrules.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-lts_xrules.Tpo $(DEPDIR)/fmbt_droid-lts_xrules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts_xrules.cc' object='fmbt_droid-lts_xrules.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-lts_xrules.o `test -f 'lts_xrules.cc' || echo '$(srcdir)/'`lts_xrules.cc

fmbt_droid-lts_xrules.obj: lts_xrules.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-lts_xrules.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-lts_xrules.Tpo -c -o fmbt_droid-lts_xrules.obj `if test -f 'lts_xrules.cc'; then $(CYGPATH_W) 'lts_xrules.cc'; else $(CYGPATH_W) '$(srcdir)/lts_xrules.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-lts_xrules.Tpo $(DEPDIR)/fmbt_droid-lts_xrules.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='lts_xrules.cc' object='fmbt_droid-lts_xrules.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-lts_xrules.obj `if test -f 'lts_xrules.cc'; then $(CYGPATH_W) 'lts_xrules.cc'; else $(CYGPATH_W) '$(srcdir)/lts_xrules.cc'; fi`

fmbt_droid-coverage_market.o: coverage_market.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-coverage_market.o -MD -MP -MF $(DEPDIR)/fmbt_droid-coverage_market.Tpo -c -o fmbt_droid-coverage_market.o `test -f 'coverage_market.cc' || echo '$(srcdir)/'`coverage_market.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-coverage_market.Tpo $(DEPDIR)/fmbt_droid-coverage_market.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_market.cc' object='fmbt_droid-coverage_market.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-coverage_market.o `test -f 'coverage_market.cc' || echo '$(srcdir)/'`coverage_market.cc

fmbt_droid-coverage_market.obj: coverage_market.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-coverage_market.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-coverage_market.Tpo -c -o fmbt_droid-coverage_market.obj `if test -f 'coverage_market.cc'; then $(CYGPATH_W) 'coverage_market.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_market.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-coverage_market.Tpo $(DEPDIR)/fmbt_droid-coverage_market.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_market.cc' object='fmbt_droid-coverage_market.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-coverage_market.obj `if test -f 'coverage_market.cc'; then $(CYGPATH_W) 'coverage_market.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_market.cc'; fi`

fmbt_droid-coverage_mapper.o: coverage_mapper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-coverage_mapper.o -MD -MP -MF $(DEPDIR)/fmbt_droid-coverage_mapper.Tpo -c -o fmbt_droid-coverage_mapper.o `test -f 'coverage_mapper.cc' || echo '$(srcdir)/'`coverage_mapper.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-coverage_mapper.Tpo $(DEPDIR)/fmbt_droid-coverage_mapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_mapper.cc' object='fmbt_droid-coverage_mapper.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-coverage_mapper.o `test -f 'coverage_mapper.cc' || echo '$(srcdir)/'`coverage_mapper.cc

fmbt_droid-coverage_mapper.obj: coverage_mapper.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-coverage_mapper.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-coverage_mapper.Tpo -c -o fmbt_droid-coverage_mapper.obj `if test -f 'coverage_mapper.cc'; then $(CYGPATH_W) 'coverage_mapper.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_mapper.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-coverage_mapper.Tpo $(DEPDIR)/fmbt_droid-coverage_mapper.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_mapper.cc' object='fmbt_droid-coverage_mapper.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-coverage_mapper.obj `if test -f 'coverage_mapper.cc'; then $(CYGPATH_W) 'coverage_mapper.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_mapper.cc'; fi`

fmbt_droid-requirement.g.d_parser.o: requirement.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-requirement.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt_droid-requirement.g.d_parser.Tpo -c -o fmbt_droid-requirement.g.d_parser.o `test -f 'requirement.g.d_parser.cc' || echo '$(srcdir)/'`requirement.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-requirement.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-requirement.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='requirement.g.d_parser.cc' object='fmbt_droid-requirement.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-requirement.g.d_parser.o `test -f 'requirement.g.d_parser.cc' || echo '$(srcdir)/'`requirement.g.d_parser.cc

fmbt_droid-requirement.g.d_parser.obj: requirement.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-requirement.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-requirement.g.d_parser.Tpo -c -o fmbt_droid-requirement.g.d_parser.obj `if test -f 'requirement.g.d_parser.cc'; then $(CYGPATH_W) 'requirement.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/requirement.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-requirement.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-requirement.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='requirement.g.d_parser.cc' object='fmbt_droid-requirement.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-requirement.g.d_parser.obj `if test -f 'requirement.g.d_parser.cc'; then $(CYGPATH_W) 'requirement.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/requirement.g.d_parser.cc'; fi`

fmbt_droid-heuristic_greedy.o: heuristic_greedy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-heuristic_greedy.o -MD -MP -MF $(DEPDIR)/fmbt_droid-heuristic_greedy.Tpo -c -o fmbt_droid-heuristic_greedy.o `test -f 'heuristic_greedy.cc' || echo '$(srcdir)/'`heuristic_greedy.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-heuristic_greedy.Tpo $(DEPDIR)/fmbt_droid-heuristic_greedy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic_greedy.cc' object='fmbt_droid-heuristic_greedy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-heuristic_greedy.o `test -f 'heuristic_greedy.cc' || echo '$(srcdir)/'`heuristic_greedy.cc

fmbt_droid-heuristic_greedy.obj: heuristic_greedy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-heuristic_greedy.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-heuristic_greedy.Tpo -c -o fmbt_droid-heuristic_greedy.obj `if test -f 'heuristic_greedy.cc'; then $(CYGPATH_W) 'heuristic_greedy.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic_greedy.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-heuristic_greedy.Tpo $(DEPDIR)/fmbt_droid-heuristic_greedy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic_greedy.cc' object='fmbt_droid-heuristic_greedy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-heuristic_greedy.obj `if test -f 'heuristic_greedy.cc'; then $(CYGPATH_W) 'heuristic_greedy.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic_greedy.cc'; fi`

fmbt_droid-coverage_tree.o: coverage_tree.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-coverage_tree.o -MD -MP -MF $(DEPDIR)/fmbt_droid-coverage_tree.Tpo -c -o fmbt_droid-coverage_tree.o `test -f 'coverage_tree.cc' || echo '$(srcdir)/'`coverage_tree.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-coverage_tree.Tpo $(DEPDIR)/fmbt_droid-coverage_tree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_tree.cc' object='fmbt_droid-coverage_tree.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-coverage_tree.o `test -f 'coverage_tree.cc' || echo '$(srcdir)/'`coverage_tree.cc

fmbt_droid-coverage_tree.obj: coverage_tree.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-coverage_tree.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-coverage_tree.Tpo -c -o fmbt_droid-coverage_tree.obj `if test -f 'coverage_tree.cc'; then $(CYGPATH_W) 'coverage_tree.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_tree.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-coverage_tree.Tpo $(DEPDIR)/fmbt_droid-coverage_tree.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage_tree.cc' object='fmbt_droid-coverage_tree.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-coverage_tree.obj `if test -f 'coverage_tree.cc'; then $(CYGPATH_W) 'coverage_tree.cc'; else $(CYGPATH_W) '$(srcdir)/coverage_tree.cc'; fi`

fmbt_droid-adapter_dummy.o: adapter_dummy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-adapter_dummy.o -MD -MP -MF $(DEPDIR)/fmbt_droid-adapter_dummy.Tpo -c -o fmbt_droid-adapter_dummy.o `test -f 'adapter_dummy.cc' || echo '$(srcdir)/'`adapter_dummy.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-adapter_dummy.Tpo $(DEPDIR)/fmbt_droid-adapter_dummy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_dummy.cc' object='fmbt_droid-adapter_dummy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-adapter_dummy.o `test -f 'adapter_dummy.cc' || echo '$(srcdir)/'`adapter_dummy.cc

fmbt_droid-adapter_dummy.obj: adapter_dummy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-adapter_dummy.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-adapter_dummy.Tpo -c -o fmbt_droid-adapter_dummy.obj `if test -f 'adapter_dummy.cc'; then $(CYGPATH_W) 'adapter_dummy.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_dummy.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-adapter_dummy.Tpo $(DEPDIR)/fmbt_droid-adapter_dummy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter_dummy.cc' object='fmbt_droid-adapter_dummy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-adapter_dummy.obj `if test -f 'adapter_dummy.cc'; then $(CYGPATH_W) 'adapter_dummy.cc'; else $(CYGPATH_W) '$(srcdir)/adapter_dummy.cc'; fi`

fmbt_droid-model.o: model.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-model.o -MD -MP -MF $(DEPDIR)/fmbt_droid-model.Tpo -c -o fmbt_droid-model.o `test -f 'model.cc' || echo '$(srcdir)/'`model.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-model.Tpo $(DEPDIR)/fmbt_droid-model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model.cc' object='fmbt_droid-model.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-model.o `test -f 'model.cc' || echo '$(srcdir)/'`model.cc

fmbt_droid-model.obj: model.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-model.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-model.Tpo -c -o fmbt_droid-model.obj `if test -f 'model.cc'; then $(CYGPATH_W) 'model.cc'; else $(CYGPATH_W) '$(srcdir)/model.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-model.Tpo $(DEPDIR)/fmbt_droid-model.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='model.cc' object='fmbt_droid-model.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-model.obj `if test -f 'model.cc'; then $(CYGPATH_W) 'model.cc'; else $(CYGPATH_W) '$(srcdir)/model.cc'; fi`

fmbt_droid-heuristic.o: heuristic.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-heuristic.o -MD -MP -MF $(DEPDIR)/fmbt_droid-heuristic.Tpo -c -o fmbt_droid-heuristic.o `test -f 'heuristic.cc' || echo '$(srcdir)/'`heuristic.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-heuristic.Tpo $(DEPDIR)/fmbt_droid-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic.cc' object='fmbt_droid-heuristic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-heuristic.o `test -f 'heuristic.cc' || echo '$(srcdir)/'`heuristic.cc

fmbt_droid-heuristic.obj: heuristic.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-heuristic.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-heuristic.Tpo -c -o fmbt_droid-heuristic.obj `if test -f 'heuristic.cc'; then $(CYGPATH_W) 'heuristic.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-heuristic.Tpo $(DEPDIR)/fmbt_droid-heuristic.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='heuristic.cc' object='fmbt_droid-heuristic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-heuristic.obj `if test -f 'heuristic.cc'; then $(CYGPATH_W) 'heuristic.cc'; else $(CYGPATH_W) '$(srcdir)/heuristic.cc'; fi`

fmbt_droid-coverage.o: coverage.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-coverage.o -MD -MP -MF $(DEPDIR)/fmbt_droid-coverage.Tpo -c -o fmbt_droid-coverage.o `test -f 'coverage.cc' || echo '$(srcdir)/'`coverage.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-coverage.Tpo $(DEPDIR)/fmbt_droid-coverage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage.cc' object='fmbt_droid-coverage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-coverage.o `test -f 'coverage.cc' || echo '$(srcdir)/'`coverage.cc

fmbt_droid-coverage.obj: coverage.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-coverage.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-coverage.Tpo -c -o fmbt_droid-coverage.obj `if test -f 'coverage.cc'; then $(CYGPATH_W) 'coverage.cc'; else $(CYGPATH_W) '$(srcdir)/coverage.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-coverage.Tpo $(DEPDIR)/fmbt_droid-coverage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='coverage.cc' object='fmbt_droid-coverage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-coverage.obj `if test -f 'coverage.cc'; then $(CYGPATH_W) 'coverage.cc'; else $(CYGPATH_W) '$(srcdir)/coverage.cc'; fi`

fmbt_droid-adapter.o: adapter.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-adapter.o -MD -MP -MF $(DEPDIR)/fmbt_droid-adapter.Tpo -c -o fmbt_droid-adapter.o `test -f 'adapter.cc' || echo '$(srcdir)/'`adapter.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-adapter.Tpo $(DEPDIR)/fmbt_droid-adapter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter.cc' object='fmbt_droid-adapter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-adapter.o `test -f 'adapter.cc' || echo '$(srcdir)/'`adapter.cc

fmbt_droid-adapter.obj: adapter.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-adapter.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-adapter.Tpo -c -o fmbt_droid-adapter.obj `if test -f 'adapter.cc'; then $(CYGPATH_W) 'adapter.cc'; else $(CYGPATH_W) '$(srcdir)/adapter.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-adapter.Tpo $(DEPDIR)/fmbt_droid-adapter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter.cc' object='fmbt_droid-adapter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-adapter.obj `if test -f 'adapter.cc'; then $(CYGPATH_W) 'adapter.cc'; else $(CYGPATH_W) '$(srcdir)/adapter.cc'; fi`

fmbt_droid-conf.g.d_parser.o: conf.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-conf.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt_droid-conf.g.d_parser.Tpo -c -o fmbt_droid-conf.g.d_parser.o `test -f 'conf.g.d_parser.cc' || echo '$(srcdir)/'`conf.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-conf.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-conf.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='conf.g.d_parser.cc' object='fmbt_droid-conf.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-conf.g.d_parser.o `test -f 'conf.g.d_parser.cc' || echo '$(srcdir)/'`conf.g.d_parser.cc

fmbt_droid-conf.g.d_parser.obj: conf.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-conf.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-conf.g.d_parser.Tpo -c -o fmbt_droid-conf.g.d_parser.obj `if test -f 'conf.g.d_parser.cc'; then $(CYGPATH_W) 'conf.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/conf.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-conf.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-conf.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='conf.g.d_parser.cc' object='fmbt_droid-conf.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-conf.g.d_parser.obj `if test -f 'conf.g.d_parser.cc'; then $(CYGPATH_W) 'conf.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/conf.g.d_parser.cc'; fi`

fmbt_droid-conf.o: conf.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-conf.o -MD -MP -MF $(DEPDIR)/fmbt_droid-conf.Tpo -c -o fmbt_droid-conf.o `test -f 'conf.cc' || echo '$(srcdir)/'`conf.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-conf.Tpo $(DEPDIR)/fmbt_droid-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='conf.cc' object='fmbt_droid-conf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-conf.o `test -f 'conf.cc' || echo '$(srcdir)/'`conf.cc

fmbt_droid-conf.obj: conf.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-conf.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-conf.Tpo -c -o fmbt_droid-conf.obj `if test -f 'conf.cc'; then $(CYGPATH_W) 'conf.cc'; else $(CYGPATH_W) '$(srcdir)/conf.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-conf.Tpo $(DEPDIR)/fmbt_droid-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='conf.cc' object='fmbt_droid-conf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-conf.obj `if test -f 'conf.cc'; then $(CYGPATH_W) 'conf.cc'; else $(CYGPATH_W) '$(srcdir)/conf.cc'; fi`

fmbt_droid-mrules.g.d_parser.o: mrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-mrules.g.d_parser.o -MD -MP -MF $(DEPDIR)/fmbt_droid-mrules.g.d_parser.Tpo -c -o fmbt_droid-mrules.g.d_parser.o `test -f 'mrules.g.d_parser.cc' || echo '$(srcdir)/'`mrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-mrules.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-mrules.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mrules.g.d_parser.cc' object='fmbt_droid-mrules.g.d_parser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-mrules.g.d_parser.o `test -f 'mrules.g.d_parser.cc' || echo '$(srcdir)/'`mrules.g.d_parser.cc

fmbt_droid-mrules.g.d_parser.obj: mrules.g.d_parser.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-mrules.g.d_parser.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-mrules.g.d_parser.Tpo -c -o fmbt_droid-mrules.g.d_parser.obj `if test -f 'mrules.g.d_parser.cc'; then $(CYGPATH_W) 'mrules.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/mrules.g.d_parser.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-mrules.g.d_parser.Tpo $(DEPDIR)/fmbt_droid-mrules.g.d_parser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='mrules.g.d_parser.cc' object='fmbt_droid-mrules.g.d_parser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-mrules.g.d_parser.obj `if test -f 'mrules.g.d_parser.cc'; then $(CYGPATH_W) 'mrules.g.d_parser.cc'; else $(CYGPATH_W) '$(srcdir)/mrules.g.d_parser.cc'; fi`

fmbt_droid-policy.o: policy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-policy.o -MD -MP -MF $(DEPDIR)/fmbt_droid-policy.Tpo -c -o fmbt_droid-policy.o `test -f 'policy.cc' || echo '$(srcdir)/'`policy.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-policy.Tpo $(DEPDIR)/fmbt_droid-policy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='policy.cc' object='fmbt_droid-policy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-policy.o `test -f 'policy.cc' || echo '$(srcdir)/'`policy.cc

fmbt_droid-policy.obj: policy.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fmbt_droid-policy.obj -MD -MP -MF $(DEPDIR)/fmbt_droid-policy.Tpo -c -o fmbt_droid-policy.obj `if test -f 'policy.cc'; then $(CYGPATH_W) 'policy.cc'; else $(CYGPATH_W) '$(srcdir)/policy.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/fmbt_droid-policy.Tpo $(DEPDIR)/fmbt_droid-policy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='policy.cc' object='fmbt_droid-policy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fmbt_droid_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fmbt_droid-policy.obj `if test -f 'policy.cc'; then $(CYGPATH_W) 'policy.cc'; else $(CYGPATH_W) '$(srcdir)/policy.cc'; fi`

remote_adapter_loader-remote_adapter_loader.o: remote_adapter_loader.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT remote_adapter_loader-remote_adapter_loader.o -MD -MP -MF $(DEPDIR)/remote_adapter_loader-remote_adapter_loader.Tpo -c -o remote_adapter_loader-remote_adapter_loader.o `test -f 'remote_adapter_loader.cc' || echo '$(srcdir)/'`remote_adapter_loader.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/remote_adapter_loader-remote_adapter_loader.Tpo $(DEPDIR)/remote_adapter_loader-remote_adapter_loader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='remote_adapter_loader.cc' object='remote_adapter_loader-remote_adapter_loader.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o remote_adapter_loader-remote_adapter_loader.o `test -f 'remote_adapter_loader.cc' || echo '$(srcdir)/'`remote_adapter_loader.cc

remote_adapter_loader-remote_adapter_loader.obj: remote_adapter_loader.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT remote_adapter_loader-remote_adapter_loader.obj -MD -MP -MF $(DEPDIR)/remote_adapter_loader-remote_adapter_loader.Tpo -c -o remote_adapter_loader-remote_adapter_loader.obj `if test -f 'remote_adapter_loader.cc'; then $(CYGPATH_W) 'remote_adapter_loader.cc'; else $(CYGPATH_W) '$(srcdir)/remote_adapter_loader.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/remote_adapter_loader-remote_adapter_loader.Tpo $(DEPDIR)/remote_adapter_loader-remote_adapter_loader.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='remote_adapter_loader.cc' object='remote_adapter_loader-remote_adapter_loader.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o remote_adapter_loader-remote_adapter_loader.obj `if test -f 'remote_adapter_loader.cc'; then $(CYGPATH_W) 'remote_adapter_loader.cc'; else $(CYGPATH_W) '$(srcdir)/remote_adapter_loader.cc'; fi`

remote_adapter_loader-adapter.o: adapter.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT remote_adapter_loader-adapter.o -MD -MP -MF $(DEPDIR)/remote_adapter_loader-adapter.Tpo -c -o remote_adapter_loader-adapter.o `test -f 'adapter.cc' || echo '$(srcdir)/'`adapter.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/remote_adapter_loader-adapter.Tpo $(DEPDIR)/remote_adapter_loader-adapter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter.cc' object='remote_adapter_loader-adapter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o remote_adapter_loader-adapter.o `test -f 'adapter.cc' || echo '$(srcdir)/'`adapter.cc

remote_adapter_loader-adapter.obj: adapter.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT remote_adapter_loader-adapter.obj -MD -MP -MF $(DEPDIR)/remote_adapter_loader-adapter.Tpo -c -o remote_adapter_loader-adapter.obj `if test -f 'adapter.cc'; then $(CYGPATH_W) 'adapter.cc'; else $(CYGPATH_W) '$(srcdir)/adapter.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/remote_adapter_loader-adapter.Tpo $(DEPDIR)/remote_adapter_loader-adapter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='adapter.cc' object='remote_adapter_loader-adapter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o remote_adapter_loader-adapter.obj `if test -f 'adapter.cc'; then $(CYGPATH_W) 'adapter.cc'; else $(CYGPATH_W) '$(srcdir)/adapter.cc'; fi`

remote_adapter_loader-log.o: log.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT remote_adapter_loader-log.o -MD -MP -MF $(DEPDIR)/remote_adapter_loader-log.Tpo -c -o remote_adapter_loader-log.o `test -f 'log.cc' || echo '$(srcdir)/'`log.cc
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/remote_adapter_loader-log.Tpo $(DEPDIR)/remote_adapter_loader-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='log.cc' object='remote_adapter_loader-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o remote_adapter_loader-log.o `test -f 'log.cc' || echo '$(srcdir)/'`log.cc

remote_adapter_loader-log.obj: log.cc
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT remote_adapter_loader-log.obj -MD -MP -MF $(DEPDIR)/remote_adapter_loader-log.Tpo -c -o remote_adapter_loader-log.obj `if test -f 'log.cc'; then $(CYGPATH_W) 'log.cc'; else $(CYGPATH_W) '$(srcdir)/log.cc'; fi`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/remote_adapter_loader-log.Tpo $(DEPDIR)/remote_adapter_loader-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='log.cc' object='remote_adapter_loader-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(remote_adapter_loader_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o remote_adapter_loader-log.obj `if test -f 'log.cc'; then $(CYGPATH_W) 'log.cc'; else $(CYGPATH_W) '$(srcdir)/log.cc'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-dist_binSCRIPTS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-dist_binSCRIPTS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dist_binSCRIPTS \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-dist_binSCRIPTS


d/make_dparser:
	(mkdir d 2>/dev/null && cp -r $(VPATH)/d .) || true # qnd way to for VPATH build
	cd d; $(MAKE) make_dparser

mrules.g.d_parser.cc: mrules.g d/make_dparser
	d/make_dparser -o mrules.g.d_parser.cc -i mrules ./$(VPATH)/mrules.g

conf.g.d_parser.cc: conf.g d/make_dparser
	d/make_dparser -o conf.g.d_parser.cc -i conf ./$(VPATH)/conf.g

lts.g.d_parser.cc: lts.g d/make_dparser
	d/make_dparser -o lts.g.d_parser.cc -i lts ./$(VPATH)/lts.g

xrules.g.d_parser.cc: xrules.g d/make_dparser
	d/make_dparser -o xrules.g.d_parser.cc -i xrules ./$(VPATH)/xrules.g

xrules_extended.g.d_parser.cc: xrules_extended.g d/make_dparser
	d/make_dparser -o xrules_extended.g.d_parser.cc -i xrules_extended ./$(VPATH)/xrules_extended.g

requirement.g.d_parser.cc: requirement.g d/make_dparser
	d/make_dparser -o requirement.g.d_parser.cc -i requirement ./$(VPATH)/requirement.g

# coverage_market.o: coverage_market.hh

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
