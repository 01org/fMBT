On Ubuntu 11.04 and Ubuntu 11.10 valgrind will complain about sse42 optimised version of strspn.

==30949== Conditional jump or move depends on uninitialised value(s)
==30949==    at 0x6F3F80E: __strspn_sse42 (strspn-c.c:142)
==30949==    by 0x452E75: getact(int**, std::vector<int, std::allocator<int> >&, _IO_FILE*, _IO_FILE*, Log&, int, int, Writable*) (helper.cc:694)
==30949==    by 0x4CBA29: aal_remote::getprops(int**) (aal_remote.cc:291)
==30949==    by 0x4ADA20: Mwrapper::getprops(int**) (mwrapper.cc:85)
==30949==    by 0x44AB48: Test_engine::log_tags(std::vector<std::string, std::allocator<std::string> > const&) (test_engine.cc:193)
==30949==    by 0x44B2B2: Test_engine::run(long) (test_engine.cc:255)
==30949==    by 0x4B60A8: Conf::execute(bool) (conf.cc:234)
==30949==    by 0x448A23: main (fmbt.cc:191)

- FIXED(?) Escaping on coverage definition is not clear. Some times escaping works, usually not. Needs to be fixed.

adapter_remote doesn't support adapter_exit, check_tags

It seems that sometimes when we get parse error, some memory is not free'ed.

FMBT with lsts models seems to use 1.5x more cpu and noticeably amount more of memory with Ubuntu 13.04, when compared with earlier Ubuntu releases (11.04, 12.04, 12.10). For some reason std::list is slow. Now we use std::stack instead and we don't have a performance issue with ubuntu 13.04 any more.
